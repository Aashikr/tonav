<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="imu__feed_8cpp" kind="file">
    <compoundname>imu_feed.cpp</compoundname>
    <includes refid="imu__feed_8h" local="yes">imu_feed.h</includes>
    <includes local="no">boost/filesystem.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">fstream</includes>
    <includes local="no">iterator</includes>
    <includes refid="general__exception_8h" local="yes">exceptions/general_exception.h</includes>
    <includes refid="imu__item_8h" local="yes">imu_item.h</includes>
    <incdepgraph>
      <node id="588">
        <label>imu_feed.h</label>
        <link refid="imu__feed_8h_source"/>
        <childnode refid="589" relation="include">
        </childnode>
        <childnode refid="590" relation="include">
        </childnode>
        <childnode refid="591" relation="include">
        </childnode>
        <childnode refid="592" relation="include">
        </childnode>
      </node>
      <node id="598">
        <label>iterator</label>
      </node>
      <node id="593">
        <label>Eigen/Core</label>
      </node>
      <node id="590">
        <label>string</label>
      </node>
      <node id="594">
        <label>imu_device.h</label>
        <link refid="imu__device_8h_source"/>
        <childnode refid="595" relation="include">
        </childnode>
      </node>
      <node id="601">
        <label>exception</label>
      </node>
      <node id="597">
        <label>fstream</label>
      </node>
      <node id="599">
        <label>exceptions/general_exception.h</label>
        <link refid="general__exception_8h_source"/>
        <childnode refid="590" relation="include">
        </childnode>
        <childnode refid="600" relation="include">
        </childnode>
      </node>
      <node id="589">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="592">
        <label>imu_item.h</label>
        <link refid="imu__item_8h_source"/>
        <childnode refid="590" relation="include">
        </childnode>
        <childnode refid="593" relation="include">
        </childnode>
        <childnode refid="594" relation="include">
        </childnode>
      </node>
      <node id="600">
        <label>exceptions/base_exception.h</label>
        <link refid="base__exception_8h_source"/>
        <childnode refid="601" relation="include">
        </childnode>
      </node>
      <node id="591">
        <label>vector</label>
      </node>
      <node id="596">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="595">
        <label>iostream</label>
      </node>
      <node id="587">
        <label>/home/travis/build/tomas789/tonav/src/imu_feed.cpp</label>
        <link refid="imu_feed.cpp"/>
        <childnode refid="588" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="590" relation="include">
        </childnode>
        <childnode refid="597" relation="include">
        </childnode>
        <childnode refid="598" relation="include">
        </childnode>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="592" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Tomas<sp/>Krejci<sp/>on<sp/>5/10/16.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imu_feed.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;exceptions/general_exception.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imu_item.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImuFeed::hasNext()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_item_<sp/>!=<sp/>std::end(items_);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImuFeed::next()<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>std::advance(current_item_,<sp/>1);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_imu_item" kindref="compound">ImuItem</ref>&amp;<sp/>ImuFeed::top()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hasNext())<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_general_exception" kindref="compound">GeneralException</ref>(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>access<sp/>after<sp/>the<sp/>end<sp/>of<sp/>imu<sp/>data<sp/>stream.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*current_item_;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="class_imu_feed" kindref="compound">ImuFeed</ref><sp/>ImuFeed::fromDataset(boost::filesystem::path<sp/>path)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_imu_feed" kindref="compound">ImuFeed</ref><sp/>feed;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>feed.loadFile(path<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;inertial_device.csv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>feed;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImuFeed::loadFile(boost::filesystem::path<sp/>fpath)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!boost::filesystem::exists(fpath))<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_general_exception" kindref="compound">GeneralException</ref>(</highlight><highlight class="stringliteral">&quot;File<sp/>not<sp/>exists<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>fpath.string());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!boost::filesystem::is_regular_file(fpath))<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_general_exception" kindref="compound">GeneralException</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>an<sp/>regular<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>fpath.string());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>input_file(fpath.c_str());</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!input_file)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_general_exception" kindref="compound">GeneralException</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>able<sp/>to<sp/>process<sp/>IMU<sp/>file.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>header;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>std::getline(input_file,<sp/>header);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(input_file)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>line;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::getline(input_file,<sp/>line);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.empty())<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_imu_item" kindref="compound">ImuItem</ref><sp/>item<sp/>=<sp/>ImuItem::fromString(line);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items_.push_back(item);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>current_item_<sp/>=<sp/>std::begin(items_);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/tomas789/tonav/src/imu_feed.cpp"/>
  </compounddef>
</doxygen>
