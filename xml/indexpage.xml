<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>tonav</title>
    <detaileddescription>
<para><ulink url="https://travis-ci.org/tomas789/tonav/branches">![Travis-CI Tonav][2]</ulink></para><para>Implementation of Multi-State Constraint Kalman <ref refid="class_filter" kindref="compound">Filter</ref> (MSCKF) for Vision-aided Inertial Navigation. This is my master&apos;s thesis.</para><para><heading level="2">Status</heading>
</para><para>This is work-in-progress. It is not able to work out-of-the-box currently. Expected time when it will be able to work out-of-the-box: July 2016.</para><para><heading level="2">Goals</heading>
</para><para>As a goal of this work I want to create complete navigation stack without using global position such as GPS. For local navigation it uses Multi-State Constraint Kalman <ref refid="class_filter" kindref="compound">Filter</ref> which is at the time of writing state-of-the-art method. It also has a great computation power to accuracy ratio. Drawback of this approach is that still accumulates (relatively small) drift during time. To compensate for this I want to use mechanism that uses loop closures. It will be based on principles used in ORB-SLAM. I have quite a bit experience with it and it works great.</para><para>By combining these two approaches I want to create navigation stack that will be able to perform life-long navigation using very cheap hardware and with low energy demands. It should be able to run on battery. It should also be able to run on CPU only.</para><para>Goal list:<itemizedlist>
<listitem><para>Accurate navigation</para></listitem><listitem><para>Low-cost hardware</para></listitem><listitem><para>Life-long navigation</para></listitem><listitem><para>Low-energy demand (battery)</para></listitem><listitem><para>Global drift compensation (loop closure)</para></listitem></itemizedlist>
</para><para><heading level="2">Datasets</heading>
</para><para>For development purpose, I use <ulink url="http://projects.csail.mit.edu/stata/index.php">MIT Stata Center Data Set</ulink>. It contains rosbag files recorded from PR2 robot.</para><para>Each bag file is quite large because it contains laser scans. They are not needed for the purpose of this work, so I created a filtered version of them using command</para><para><computeroutput>$ rosbag filter 2011-01-18-06-37-58.bag pr2.bag &apos;topic in (&quot;/wide_stereo/left/image_rect&quot;, &quot;/wide_stereo/left/camera_info&quot;, &quot;/torso_lift    _imu/data&quot;, &quot;/tf&quot;, &quot;/robot_pose_ekf/odom_combined&quot;)&apos;</computeroutput></para><para>By the way. Can you believe how hard it is to find publically available bagfile that is recorded using some cheap hardware? C&apos;mon!</para><para><heading level="2">Installation</heading>
</para><para>To install this you need to have installed and working ROS. Then it should be fairly easy to build and run.</para><para>``` git clone <ulink url="https://github.com/tomas789/tonav.git">https://github.com/tomas789/tonav.git</ulink> cd tonav mkdir build cd build cmake .. make ```</para><para><heading level="2">Run</heading>
</para><para>I currently don&apos;t provide any roslaunch file. Just run <computeroutput>roscore</computeroutput> and then run <ref refid="class_tonav" kindref="compound">Tonav</ref></para><para>``` ./tonav <ndash/>image &lt;image_topic&gt; <ndash/>camerainfo &lt;camerainfo_topic&gt; <ndash/>imu &lt;imu_topic&gt; ```</para><para>For <ulink url="http://projects.csail.mit.edu/stata/index.php">MIT Stata Center Data Set</ulink> I run it using</para><para>``` ./tonav <ndash/>image /wide_stereo/left/image_rect <ndash/>camerainfo /wide_stereo/left/camera_info <ndash/>imu /torso_lift_imu/data ```</para><para><heading level="2">Documentation</heading>
</para><para>At the time of writing there is no good documentation. Actually the best one is this readme. You can also find some useful information in my in-source Doxygen documentation. If you have installed Doxygen in version at least 1.8.8 you can generate it. Just run <computeroutput>make doc</computeroutput> and it will be generated in the folder <computeroutput>build/doc</computeroutput>.</para><para><heading level="2">Bug reporting and support</heading>
</para><para>This is something as alpha-dev-buggy piece of work. But stay tuned. I do my best. If you want to report a bug or if you want to know something about it just contact me at <ulink url="mailto:tomas789@gmail.com">tomas789@gmail.com</ulink> or simply use <ulink url="https://github.com/tomas789/tonav/issues">Issue tracker of GitHub</ulink>.</para><para><heading level="2">What does <ref refid="class_tonav" kindref="compound">Tonav</ref> mean?</heading>
</para><para>Its Tom&apos;s Navigation.</para><para><heading level="2">License</heading>
</para><para>This work is currently distributed under LGPL v3 license. In the future, it will switch to GPL. </para>    </detaileddescription>
  </compounddef>
</doxygen>
