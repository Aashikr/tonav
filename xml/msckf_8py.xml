<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="msckf_8py" kind="file">
    <compoundname>msckf.py</compoundname>
    <innerclass refid="classmsckf_1_1_quaternion" prot="public">msckf::Quaternion</innerclass>
    <innerclass refid="classmsckf_1_1_imu_device" prot="public">msckf::ImuDevice</innerclass>
    <innerclass refid="classmsckf_1_1_imu_item" prot="public">msckf::ImuItem</innerclass>
    <innerclass refid="classmsckf_1_1_camera_item" prot="public">msckf::CameraItem</innerclass>
    <innerclass refid="classmsckf_1_1_imu_buffer" prot="public">msckf::ImuBuffer</innerclass>
    <innerclass refid="classmsckf_1_1_pose_get" prot="public">msckf::PoseGet</innerclass>
    <innerclass refid="classmsckf_1_1_body_state" prot="public">msckf::BodyState</innerclass>
    <innerclass refid="classmsckf_1_1_state" prot="public">msckf::State</innerclass>
    <innerclass refid="classmsckf_1_1_feature_track" prot="public">msckf::FeatureTrack</innerclass>
    <innerclass refid="classmsckf_1_1_image_tracker" prot="public">msckf::ImageTracker</innerclass>
    <innerclass refid="classmsckf_1_1_msckf" prot="public">msckf::Msckf</innerclass>
    <innernamespace refid="namespacemsckf">msckf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>heapq</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>tf2_ros</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cv2</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>bisect</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>quaternion</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>operator</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>threading</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>yaml</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scipy</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scipy.linalg</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scipy.stats</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>traceback</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pickle<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pkl</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>enum<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Enum</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numpy.linalg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>inv</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>std_msgs.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Header</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sensor_msgs.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Imu,<sp/>Image,<sp/>PointCloud,<sp/>ChannelFloat32</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>geometry_msgs.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Vector3,<sp/>Point32,<sp/>TransformStamped</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>gazebo_msgs.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ModelState</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>gazebo_msgs.srv<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SetModelState</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>cv_bridge<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>CvBridge,<sp/>CvBridgeError</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize.slsqp<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>approx_jacobian</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">null(A,<sp/>eps=1e-12):</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>u,<sp/>s,<sp/>vh<sp/>=<sp/>scipy.linalg.svd(A)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>padding<sp/>=<sp/>max(0,np.shape(A)[1]-np.shape(s)[0])</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>null_mask<sp/>=<sp/>np.concatenate(((s<sp/>&lt;=<sp/>eps),<sp/>np.ones((padding,),dtype=bool)),axis=0)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>null_space<sp/>=<sp/>scipy.compress(null_mask,<sp/>vh,<sp/>axis=0)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scipy.transpose(null_space)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">print_yellow(msg,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;\033[0;33m&apos;</highlight><highlight class="normal"><sp/>+<sp/>msg<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\033[0m&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">print_yellow_bold(msg,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;\033[1;33m&apos;</highlight><highlight class="normal"><sp/>+<sp/>msg<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\033[0m&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classmsckf_1_1_quaternion" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmsckf_1_1_quaternion" kindref="compound">Quaternion</ref>:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">to_rotation_matrix(q):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>abs(q.norm()<sp/>-<sp/>1)<sp/>&lt;<sp/>1e-6,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>unit<sp/>quaternion.<sp/>Norm<sp/>is<sp/>{:.6f}&quot;</highlight><highlight class="normal">.format(q.norm())</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.array([</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[q.w*q.w+q.x*q.x-q.y*q.y-q.z*q.z,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2*(q.x*q.y-q.w*q.z),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2*(q.x*q.z+q.w*q.y)],</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2*(q.x*q.y+q.w*q.z),<sp/>q.w*q.w-q.x*q.x+q.y*q.y-q.z*q.z,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2*(q.y*q.z-q.w*q.x)],</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2*(q.x*q.z-q.w*q.y),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2*(q.y*q.z+q.w*q.x),<sp/>q.w*q.w-q.x*q.x-q.y*q.y+q.z*q.z]</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">to_euler_angles(q):</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>abs(q.norm()<sp/>-<sp/>1)<sp/>&lt;<sp/>1e-6,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>unit<sp/>quaternion.<sp/>Norm<sp/>is<sp/>{:.6f}&quot;</highlight><highlight class="normal">.format(q.norm())</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.array([</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.arctan2(2*(-q.w*q.x<sp/>+<sp/>q.y*q.z),<sp/>1<sp/>-<sp/>2*(q.x*q.x<sp/>+<sp/>q.y*q.y)),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.arcsin(2*(-q.x*q.y<sp/>-<sp/>q.z*q.x)),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.arctan2(2*(-q.w*q.z<sp/>+<sp/>q.x*q.y),<sp/>1<sp/>-<sp/>2*(q.y*q.y<sp/>+<sp/>q.z*q.z))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]).reshape((3,<sp/>1))</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">vector_to_quaternion_form(vec):</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Convert<sp/>vector<sp/>to<sp/>quaternion<sp/>form.<sp/>This<sp/>is<sp/>used<sp/>for<sp/>sandwich<sp/>product.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>vec.shape<sp/>==<sp/>(3,<sp/>1),<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>3D<sp/>vector&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.quaternion(0.0,<sp/>vec[0],<sp/>vec[1],<sp/>vec[2])</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">vector_from_quaternion_form(vec_quat):</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Convert<sp/>vectom<sp/>from<sp/>quaternion<sp/>form.<sp/>This<sp/>is<sp/>used<sp/>for<sp/>sandwich<sp/>product.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>type(vec_quat)<sp/>==<sp/>np.quaternion,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>quaternion&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>vec_quat.w<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;vec_quat<sp/>is<sp/>not<sp/>a<sp/>quaternion<sp/>form<sp/>of<sp/>3D<sp/>vector.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vec_quat.vec.reshape((3,<sp/>1))</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">cross_matrix(vec):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Get<sp/>$a<sp/>\to<sp/>[a]_\times$&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>len(vec)<sp/>==<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>vector<sp/>of<sp/>length<sp/>3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_x,<sp/>a_y,<sp/>a_z<sp/>=<sp/>vec</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.asarray([</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0,<sp/>-1*a_z,<sp/>a_y],</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[a_z,<sp/>0,<sp/>-1*a_x],</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[-1*a_y,<sp/>a_x,<sp/>0]</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">big_omega_matrix(vec):</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>len(vec)<sp/>==<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>vector<sp/>of<sp/>length<sp/>3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>np.zeros((4,<sp/>4))</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[1:,<sp/>1:]<sp/>=<sp/>-1<sp/>*<sp/>Quaternion.cross_matrix(vec)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[0:1,<sp/>1:]<sp/>=<sp/>-1<sp/>*<sp/>vec.T</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[1:,<sp/>0:1]<sp/>=<sp/>vec</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classmsckf_1_1_imu_device" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmsckf_1_1_imu_device" kindref="compound">ImuDevice</ref>(Enum):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>accelerometer<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>gyroscope<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classmsckf_1_1_imu_item" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmsckf_1_1_imu_item" kindref="compound">ImuItem</ref>:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>device,<sp/>time,<sp/>value):</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>type(device)<sp/>==<sp/>ImuDevice</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>isinstance(time,<sp/>float)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>time<sp/>&gt;=<sp/>0.0</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>value.shape<sp/>==<sp/>(3,<sp/>1)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_imu_item_1aa14e9d1e337841a3971dcfe0033aab5f" kindref="member">_device</ref><sp/>=<sp/>device</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_imu_item_1aba7faf5251926476e7fd0d4171df97a5" kindref="member">_time</ref><sp/>=<sp/>time</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_imu_item_1ac145ab092cc5dd7b21741a2a298fe09a" kindref="member">_value</ref><sp/>=<sp/>value</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__lt__(self,<sp/>other):</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_imu_item_1af0283cdd3b9f291e9a3abcbadc7dcc61" kindref="member">_compare</ref>(other,<sp/>operator.lt)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__le__(self,<sp/>other):</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_imu_item_1af0283cdd3b9f291e9a3abcbadc7dcc61" kindref="member">_compare</ref>(other,<sp/>operator.le)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__gt__(self,<sp/>other):</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_imu_item_1af0283cdd3b9f291e9a3abcbadc7dcc61" kindref="member">_compare</ref>(other,<sp/>operator.gt)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__ge__(self,<sp/>other):</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_imu_item_1af0283cdd3b9f291e9a3abcbadc7dcc61" kindref="member">_compare</ref>(other,<sp/>operator.ge)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__eq__(self,<sp/>other):</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_imu_item_1af0283cdd3b9f291e9a3abcbadc7dcc61" kindref="member">_compare</ref>(other,<sp/>operator.eq)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__ne__(self,<sp/>other):</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_imu_item_1af0283cdd3b9f291e9a3abcbadc7dcc61" kindref="member">_compare</ref>(other,<sp/>operator.ne)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_compare(self,<sp/>other,<sp/>op):</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(other,<sp/>ImuItem):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op(self.<ref refid="classmsckf_1_1_imu_item_1af1453674ea9cba40874df29d17621796" kindref="member">time</ref>,<sp/>other.time)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(other,<sp/>float):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op(self.<ref refid="classmsckf_1_1_imu_item_1af1453674ea9cba40874df29d17621796" kindref="member">time</ref>,<sp/>other)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NotImplemented</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">device(self):</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_imu_item_1aa14e9d1e337841a3971dcfe0033aab5f" kindref="member">_device</ref></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">time(self):</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_imu_item_1aba7faf5251926476e7fd0d4171df97a5" kindref="member">_time</ref></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">value(self):</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_imu_item_1ac145ab092cc5dd7b21741a2a298fe09a" kindref="member">_value</ref></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classmsckf_1_1_camera_item" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmsckf_1_1_camera_item" kindref="compound">CameraItem</ref>:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>time,<sp/>image):</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_camera_item_1ad559a375ad268d16a93220455ecbe38a" kindref="member">time</ref><sp/>=<sp/>time</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_camera_item_1a8d1e979360ecbde8620b03be8760dba8" kindref="member">image</ref><sp/>=<sp/>image</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classmsckf_1_1_imu_buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmsckf_1_1_imu_buffer" kindref="compound">ImuBuffer</ref>:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Contains<sp/>a<sp/>list<sp/>of<sp/>IMU<sp/>measurements.<sp/>Times<sp/>are<sp/>unique.</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>device):</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>type(device)<sp/>==<sp/>ImuDevice</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a32ca4fadfb0ea149595c2e525359dfd1" kindref="member">device</ref><sp/>=<sp/>device</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">push(self,<sp/>imu_item):</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>isinstance(imu_item,<sp/>ImuItem),<sp/></highlight><highlight class="stringliteral">&apos;Expected<sp/>type<sp/>`ImuItem`.<sp/>Got<sp/>{}.&apos;</highlight><highlight class="normal">.format(type(imu_item))</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>imu_item.device<sp/>==<sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a32ca4fadfb0ea149595c2e525359dfd1" kindref="member">device</ref></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>bisect.bisect_left(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>,<sp/>imu_item)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>)<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(pos<sp/>!=<sp/>len(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>)):</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[pos<sp/>+<sp/>1]<sp/>!=<sp/>imu_item,<sp/></highlight><highlight class="stringliteral">&quot;IMU<sp/>item<sp/>already<sp/>in<sp/>buffer<sp/>for<sp/>time<sp/>{}&quot;</highlight><highlight class="normal">.format(imu_item.time)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.items.insert(pos,<sp/>imu_item)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a698da50c389659d3c762ddc2251296e3" kindref="member">check_integrity</ref>()</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">check_integrity(self):</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>all(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[i]<sp/>&lt;=<sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[i+1]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>)-1)),<sp/></highlight><highlight class="stringliteral">&apos;Buffer<sp/>is<sp/>not<sp/>sorted.&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>all(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[i]<sp/>!=<sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[i+1]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>)-1)),<sp/></highlight><highlight class="stringliteral">&apos;Buffer<sp/>contains<sp/>duplicates.&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">min(self):</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[0]</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">max(self):</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[-1]</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">mean_value(self):</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>np.zeros((3,<sp/>1))</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>item<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>item.value</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s<sp/>/<sp/>len(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__len__(self):</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__getitem__(self,<sp/>ix):</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>ix<sp/>&gt;=<sp/>0</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>ix<sp/>&lt;<sp/>len(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[ix]</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">pop_min(self):</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>len(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>)<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.items.pop(0)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">interpolate(self,<sp/>time):</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>isinstance(time,<sp/>float),<sp/></highlight><highlight class="stringliteral">&apos;Expected<sp/>`float`.<sp/>Got<sp/>{}.&apos;</highlight><highlight class="normal">.format(type(time))</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>len(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>)<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>time<sp/>&gt;=<sp/>self.min.time,<sp/></highlight><highlight class="stringliteral">&apos;Interpolation<sp/>into<sp/>past<sp/>{}.<sp/>Min<sp/>time<sp/>{}.&apos;</highlight><highlight class="normal">.format(time,<sp/>self.min.time)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>time<sp/>&lt;=<sp/>self.max.time,<sp/></highlight><highlight class="stringliteral">&apos;Interpolation<sp/>into<sp/>future<sp/>{}.<sp/>Max<sp/>time<sp/>{}.&apos;</highlight><highlight class="normal">.format(time,<sp/>self.max.time)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a698da50c389659d3c762ddc2251296e3" kindref="member">check_integrity</ref>()</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>bisect.bisect_left(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>,<sp/>time)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pos<sp/>==<sp/>0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a359f10c40136ea9c4e75c6c3cb2f4310" kindref="member">min</ref></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pos<sp/>==<sp/>len(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1adb77be97e9cfe0e5a3e58c607c9dfebe" kindref="member">max</ref></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[pos-1].time<sp/>&lt;<sp/>time)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(time<sp/>&lt;=<sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[pos].time),<sp/></highlight><highlight class="stringliteral">&apos;Expected<sp/>{:.4f}<sp/>&lt;<sp/>{:.4f}<sp/>&lt;=<sp/>{:.4f}<sp/>at<sp/>{}<sp/>out<sp/>of<sp/>{}<sp/>({}<sp/>and<sp/>{}).&apos;</highlight><highlight class="normal">.format(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[pos-1].time,<sp/>time,<sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[pos].time,<sp/>pos,<sp/>len(self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>),<sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[pos-1].time<sp/>&lt;<sp/>time,<sp/>time<sp/>&lt;=<sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[pos].time)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[pos-1].time</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[pos].time</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>(time-a)/(b-a)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>(t<sp/>&gt;=<sp/>0.0)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(t<sp/>&lt;=<sp/>1.0)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>t*self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[pos-1].value<sp/>+<sp/>(1-t)*self.<ref refid="classmsckf_1_1_imu_buffer_1a30ea8b12a07b5f7e594867741dcae9b7" kindref="member">items</ref>[pos].value</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmsckf_1_1_imu_item" kindref="compound">ImuItem</ref>(self.<ref refid="classmsckf_1_1_imu_buffer_1a32ca4fadfb0ea149595c2e525359dfd1" kindref="member">device</ref>,<sp/>time,<sp/>value)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="classmsckf_1_1_pose_get" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmsckf_1_1_pose_get" kindref="compound">PoseGet</ref>():</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>state):</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_pose_get_1a75b39f2276ee24bc71dbbd5ce43ec585" kindref="member">state</ref><sp/>=<sp/>state</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__getitem__(self,<sp/>key):</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.state.camera_poses[key<sp/>-<sp/>self.state.first_camera_pose_id]</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classmsckf_1_1_body_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmsckf_1_1_body_state" kindref="compound">BodyState</ref>:</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>global_gravity<sp/>=<sp/>np.asarray([0.0,<sp/>0.0,<sp/>0]).reshape((3,<sp/>1))</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self):</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_body_state_1ae66c70ddae91a648f29efc568f4344da" kindref="member">q_B_G</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_body_state_1a0f413de95b39715210b1d88e3d6e707b" kindref="member">p_B_G</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_body_state_1aaea8bab90d430f203ff8d8fabd9a16d7" kindref="member">v_B_G</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_body_state_1a663d35092ee45633a18a9eab916c7c2a" kindref="member">time</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_body_state_1ac4940afd5c65881731a6a03e090c5093" kindref="member">rotation_estimate</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_body_state_1a658e340e374f712b049f3197530d3365" kindref="member">acceleration_estimate</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">time_to(self,<sp/>other):</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>isinstance(other,<sp/>BodyState)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>other.time<sp/>-<sp/>self.<ref refid="classmsckf_1_1_body_state_1a663d35092ee45633a18a9eab916c7c2a" kindref="member">time</ref></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">initialize(time,<sp/>rotation_estimate,<sp/>acceleration_estimate,<sp/>q_B_G,<sp/>p_B_G,<sp/>v_B_G):</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/><ref refid="classmsckf_1_1_body_state" kindref="compound">BodyState</ref>()</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.q_B_G<sp/>=<sp/>q_B_G</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.p_B_G<sp/>=<sp/>p_B_G</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.v_B_G<sp/>=<sp/>v_B_G</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.time<sp/>=<sp/>time</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.rotation_estimate<sp/>=<sp/>rotation_estimate</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.acceleration_estimate<sp/>=<sp/>acceleration_estimate</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">copy(other):</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/><ref refid="classmsckf_1_1_body_state" kindref="compound">BodyState</ref>()</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.q_B_G<sp/>=<sp/>other.q_B_G</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.p_B_G<sp/>=<sp/>other.p_B_G</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.v_B_G<sp/>=<sp/>other.v_B_G</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.time<sp/>=<sp/>other.time</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.rotation_estimate<sp/>=<sp/>other.rotation_estimate</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.acceleration_estimate<sp/>=<sp/>other.acceleration_estimate</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">propagate(from_state,<sp/>time,<sp/>rotation_estimate,<sp/>acceleration_estimate):</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_state<sp/>=<sp/>BodyState.copy(from_state)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_state.time<sp/>=<sp/>time</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_state.rotation_estimate<sp/>=<sp/>rotation_estimate</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_state.acceleration_estimate<sp/>=<sp/>acceleration_estimate</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_Bnext_Bcurrent<sp/>=<sp/>BodyState._propagate_gyro(from_state,<sp/>to_state)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_delta,<sp/>v_delta<sp/>=<sp/>BodyState._propagate_accel(from_state,<sp/>to_state,<sp/>q_Bnext_Bcurrent)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_state.q_B_G<sp/>=<sp/>from_state.q_B_G<sp/>*<sp/>q_Bnext_Bcurrent</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_state.p_B_G<sp/>=<sp/>from_state.p_B_G<sp/>+<sp/>p_delta</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_state.v_B_G<sp/>=<sp/>from_state.v_B_G<sp/>+<sp/>v_delta</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>to_state</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_propagate_gyro(<sp/>from_state,<sp/>to_state):</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro_est<sp/>=<sp/>to_state.rotation_estimate</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro_est_prev<sp/>=<sp/>from_state.rotation_estimate</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro_est_mid<sp/>=<sp/>0.5*(gyro_est<sp/>+<sp/>gyro_est_prev)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_0<sp/>=<sp/>np.asarray([1.0,<sp/>0.0,<sp/>0.0,<sp/>0.0]).reshape((4,<sp/>1))</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta_t<sp/>=<sp/>from_state.time_to(to_state)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_B_G_prev<sp/>=<sp/>from_state.q_B_G</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k1<sp/>=<sp/>0.5<sp/>*<sp/>Quaternion.big_omega_matrix(gyro_est_prev).dot(q_0)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k2<sp/>=<sp/>0.5<sp/>*<sp/>Quaternion.big_omega_matrix(gyro_est_mid).dot(q_0<sp/>+<sp/>delta_t/2.0<sp/>*<sp/>k1)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k3<sp/>=<sp/>0.5<sp/>*<sp/>Quaternion.big_omega_matrix(gyro_est_mid).dot(q_0<sp/>+<sp/>delta_t/2.0<sp/>*<sp/>k2)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k4<sp/>=<sp/>0.5<sp/>*<sp/>Quaternion.big_omega_matrix(gyro_est).dot(q_0<sp/>+<sp/>delta_t*k3)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_perturb_vec<sp/>=<sp/>q_0<sp/>+<sp/>delta_t/6.0<sp/>*<sp/>(k1<sp/>+<sp/>2*k2<sp/>+<sp/>2*k3<sp/>+<sp/>k4)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.quaternion(*q_perturb_vec).normalized()</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_propagate_accel(from_state,<sp/>to_state,<sp/>q_Bnext_Bcurrent):</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_gravity<sp/>=<sp/>BodyState.global_gravity</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_l1_l<sp/>=<sp/>Quaternion.to_rotation_matrix(q_Bnext_Bcurrent).T</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta_t<sp/>=<sp/>from_state.time_to(to_state)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_hat<sp/>=<sp/>delta_t/2.0<sp/>*<sp/>(r_l1_l.dot(to_state.acceleration_estimate)<sp/>+<sp/>from_state.acceleration_estimate)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_hat<sp/>=<sp/>delta_t/2.0<sp/>*<sp/>s_hat</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_prev_to_global<sp/>=<sp/>Quaternion.to_rotation_matrix(from_state.q_B_G).T</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_delta<sp/>=<sp/>r_prev_to_global.dot(s_hat)<sp/>-<sp/>global_gravity*delta_t<sp/></highlight><highlight class="comment">#<sp/>!!!<sp/>subtract<sp/>gravity,<sp/>not<sp/>add<sp/>!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_delta<sp/>=<sp/>from_state.v_B_G*delta_t<sp/>+<sp/>r_prev_to_global.dot(y_hat)<sp/>-<sp/>0.5*global_gravity*(delta_t*delta_t)<sp/></highlight><highlight class="comment">#<sp/>!!!<sp/>subtract<sp/>gravity,<sp/>not<sp/>add<sp/>!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_delta,<sp/>v_delta</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319" refid="classmsckf_1_1_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmsckf_1_1_state" kindref="compound">State</ref>(object):</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>=<sp/>property(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>self:<sp/>self.body_state.time)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>q_B_G<sp/>=<sp/>property(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>self:<sp/>self.body_state.q_B_G)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>p_B_G<sp/>=<sp/>property(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>self:<sp/>self.body_state.p_B_G)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>v_B_G<sp/>=<sp/>property(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>self:<sp/>self.body_state.v_B_G)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>pose<sp/>=<sp/>property(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>self:<sp/><ref refid="classmsckf_1_1_pose_get" kindref="compound">PoseGet</ref>(self))</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>accel_item,<sp/>gyro_item,<sp/>initial_accel_mean):</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>isinstance(accel_item,<sp/>ImuItem),<sp/></highlight><highlight class="stringliteral">&apos;Expected<sp/>`accel_item`<sp/>to<sp/>be<sp/>of<sp/>type<sp/>`ImuItem`.<sp/>Got<sp/>`{}`.&apos;</highlight><highlight class="normal">.format(type(accel_item))</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>isinstance(gyro_item,<sp/>ImuItem),<sp/></highlight><highlight class="stringliteral">&apos;Expected<sp/>`gyro_item`<sp/>to<sp/>be<sp/>of<sp/>type<sp/>`ImuItem`.<sp/>Got<sp/>`{}`.&apos;</highlight><highlight class="normal">.format(type(gyro_item))</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>accel_item.time<sp/>==<sp/>gyro_item.time,<sp/></highlight><highlight class="stringliteral">&quot;Gyroscope<sp/>and<sp/>accelerometer<sp/>times<sp/>do<sp/>not<sp/>match&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1a4685283913afe8e3762f885b1ee49aaa" kindref="member">b_g</ref><sp/>=<sp/>np.zeros((3,<sp/>1))</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1ab5334519dab92512663743a21325b6d0" kindref="member">b_a</ref><sp/>=<sp/>np.zeros((3,<sp/>1))</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1acb42c97d2bc8b414e1d123c32d3bce7b" kindref="member">T_g</ref><sp/>=<sp/>np.eye(3)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1a55f507697e1df1dc272c3b394c98a594" kindref="member">T_s</ref><sp/>=<sp/>np.zeros((3,<sp/>3))</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1ac10d747d657c748a00dec2fadf730cd4" kindref="member">T_a</ref><sp/>=<sp/>np.eye(3)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1afea15c330a8f44f4081d612fcf5aaca7" kindref="member">p_B_C</ref><sp/>=<sp/>np.zeros((3,<sp/>1))</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.f_x,<sp/>self.<ref refid="classmsckf_1_1_state_1a27095fe241e9cb72ada586d442d6a143" kindref="member">f_y</ref><sp/>=<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.o_x,<sp/>self.<ref refid="classmsckf_1_1_state_1aba04b13698fdc6cfe7c2d32324432459" kindref="member">o_y</ref><sp/>=<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.k_1,<sp/>self.k_2,<sp/>self.<ref refid="classmsckf_1_1_state_1ac35ee5c42c4a17b9a219b811b47a876f" kindref="member">k_3</ref><sp/>=<sp/>0,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.t_1,<sp/>self.<ref refid="classmsckf_1_1_state_1ae553c742f849304bb8514981a499389c" kindref="member">t_2</ref><sp/>=<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.t_d,<sp/>self.<ref refid="classmsckf_1_1_state_1a6a576f30d3a2f42f29adc87e03dd0876" kindref="member">t_r</ref><sp/>=<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration_estimate<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1ab3159f30af3ec38d872f93292a9676ab" kindref="member">compute_acceleration_estimate</ref>(accel_item.value)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotation_estimate<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1a87fac63716f6150b0389e14ba5b4f740" kindref="member">compute_rotation_estimate</ref>(gyro_item.value,<sp/>accel_item.value)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_B_G<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1a835e12a679c2dc50248383778bbb3d3b" kindref="member">estimate_initial_attitude</ref>(initial_accel_mean)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_B_G<sp/>=<sp/>np.zeros((3,<sp/>1))</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_B_G<sp/>=<sp/>np.zeros((3,<sp/>1))</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1a3e5e50676def313ecdc9ba6b0878b039" kindref="member">body_state</ref><sp/>=<sp/>BodyState.initialize(accel_item.time,<sp/>rotation_estimate,<sp/>acceleration_estimate,<sp/>q_B_G,<sp/>p_B_G,<sp/>v_B_G)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1a1e93e259f7390bba92ef3f2445aa2112" kindref="member">sigma</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1a6c6b64481b9d723a74afd5b521941c90" kindref="member">camera_poses</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1a28ba89e11bae7d996ff4218c826bf376" kindref="member">features_tracked_in_image</ref><sp/>=<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1a7b6759e1c42e803e7f9d6a97079c3ec1" kindref="member">first_camera_pose_id</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1ae460a78ec25da8e33378372a2dc9943c" kindref="member">past_last_camera_pose_id</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">get_body_to_camera_frame_rotation():</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>parameter<sp/>and<sp/>filter<sp/>does<sp/>not<sp/>estimate<sp/>it<sp/>!!!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.quaternion(0.5,<sp/>-0.5,<sp/>0.5,<sp/>-0.5).conjugate()</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">propagate(self,<sp/>accel_item,<sp/>gyro_item):</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>abs(accel_item.time<sp/>-<sp/>gyro_item.time)<sp/>&lt;<sp/>1e-6,<sp/></highlight><highlight class="stringliteral">&apos;Not<sp/>at<sp/>the<sp/>same<sp/>time.<sp/>Gyro:<sp/>{:.5f}<sp/>accel:<sp/>{:.5f}&apos;</highlight><highlight class="normal">.format(gyro_item.time,<sp/>accel_item.time)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration_estimate<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1ab3159f30af3ec38d872f93292a9676ab" kindref="member">compute_acceleration_estimate</ref>(accel_item.value)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotation_estimate<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1a87fac63716f6150b0389e14ba5b4f740" kindref="member">compute_rotation_estimate</ref>(gyro_item.value,<sp/>accel_item.value)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1a3e5e50676def313ecdc9ba6b0878b039" kindref="member">body_state</ref><sp/>=<sp/>BodyState.propagate(self.<ref refid="classmsckf_1_1_state_1a3e5e50676def313ecdc9ba6b0878b039" kindref="member">body_state</ref>,<sp/>accel_item.time,<sp/>rotation_estimate,<sp/>acceleration_estimate)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_yellow(</highlight><highlight class="stringliteral">&apos;Propagation<sp/>[{:.2f},<sp/>{:.2f},<sp/>{:.2f}]&apos;</highlight><highlight class="normal">.format(self.body_state.p_B_G[0,<sp/>0],<sp/>self.body_state.p_B_G[1,<sp/>0],<sp/>self.body_state.p_B_G[2,<sp/>0]))</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">initial_attitude_to_empty_state(self,<sp/>initial_accel_mean):</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initial_attitude<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1a835e12a679c2dc50248383778bbb3d3b" kindref="member">estimate_initial_attitude</ref>(initial_accel_mean)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state[0:4]<sp/>=<sp/>initial_attitude.components.reshape((4,<sp/>1))</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">estimate_initial_attitude(self,<sp/>initial_accel_mean):</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#assert<sp/>initial_accel_mean.shape<sp/>==<sp/>(3,<sp/>1),<sp/>&quot;Wrong<sp/>`initial_accel_mean`<sp/>shape<sp/>{}<sp/>expected<sp/>(3,<sp/>1)&quot;.format(initial_accel_mean.shape)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#gravity_body_est<sp/>=<sp/>self.compute_acceleration_estimate(initial_accel_mean)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#gravity_global<sp/>=<sp/>BodyState.global_gravity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#w<sp/>=<sp/>gravity_global.dot(gravity_body_est)<sp/>+<sp/>gravity_global[3,<sp/>0]*gravity_global[3,<sp/>0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#vec<sp/>=<sp/>np.cross(gravity_global.reshape((3,<sp/>)),<sp/>gravity_body_est.reshape((3,<sp/>)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#return<sp/>np.quaternion(w,<sp/>*vec).normalized().conjugate()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.quaternion(1,<sp/>0,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">augment(self):</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_state_1a7b6759e1c42e803e7f9d6a97079c3ec1" kindref="member">first_camera_pose_id</ref><sp/>&lt;=<sp/>self.<ref refid="classmsckf_1_1_state_1ae460a78ec25da8e33378372a2dc9943c" kindref="member">past_last_camera_pose_id</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>camera<sp/>pose<sp/>ID&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Augment<sp/>state<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera_pose<sp/>=<sp/>BodyState.copy(self.<ref refid="classmsckf_1_1_state_1a3e5e50676def313ecdc9ba6b0878b039" kindref="member">body_state</ref>)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.camera_poses.append(camera_pose)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Augment<sp/>Sigma<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>len(self.<ref refid="classmsckf_1_1_state_1a6c6b64481b9d723a74afd5b521941c90" kindref="member">camera_poses</ref>)<sp/>-<sp/>1</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>J_pi<sp/>=<sp/>np.eye(9,<sp/>56+(9*n))</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma<sp/>=<sp/>np.zeros((56+9*(n+1),<sp/>56+9*(n+1)))</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma[0:(56+9*n),<sp/>0:(56+9*n)]<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1a1e93e259f7390bba92ef3f2445aa2112" kindref="member">sigma</ref></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma[0:(56+9*n),<sp/>(56+9*n):]<sp/>=<sp/>self.sigma.dot(J_pi.T)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma[(56+9*n):,<sp/>0:(56+9*n)]<sp/>=<sp/>J_pi.dot(self.<ref refid="classmsckf_1_1_state_1a1e93e259f7390bba92ef3f2445aa2112" kindref="member">sigma</ref>)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma[(56+9*n):,<sp/>(56+9*n):]<sp/>=<sp/>J_pi.dot(self.<ref refid="classmsckf_1_1_state_1a1e93e259f7390bba92ef3f2445aa2112" kindref="member">sigma</ref>).dot(J_pi.T)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1a1e93e259f7390bba92ef3f2445aa2112" kindref="member">sigma</ref><sp/>=<sp/>sigma</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1ae460a78ec25da8e33378372a2dc9943c" kindref="member">past_last_camera_pose_id</ref><sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_state_1a7b6759e1c42e803e7f9d6a97079c3ec1" kindref="member">first_camera_pose_id</ref><sp/>&lt;=<sp/>self.<ref refid="classmsckf_1_1_state_1ae460a78ec25da8e33378372a2dc9943c" kindref="member">past_last_camera_pose_id</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>camera<sp/>pose<sp/>ID&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">remove_n_cam_poses(self,<sp/>n):</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Remove<sp/>last<sp/>$n$<sp/>camera<sp/>poses&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>n<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;$n$<sp/>has<sp/>to<sp/>be<sp/>non<sp/>negative&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1a6c6b64481b9d723a74afd5b521941c90" kindref="member">camera_poses</ref><sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1a6c6b64481b9d723a74afd5b521941c90" kindref="member">camera_poses</ref>[n:]</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>len(self.<ref refid="classmsckf_1_1_state_1a6c6b64481b9d723a74afd5b521941c90" kindref="member">camera_poses</ref>)<sp/>+<sp/>n</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma<sp/>=<sp/>np.zeros((56<sp/>+<sp/>9*(m-n),<sp/>56<sp/>+<sp/>9*(m-n)))</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma[0:56,<sp/>0:56]<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1a1e93e259f7390bba92ef3f2445aa2112" kindref="member">sigma</ref>[0:56,<sp/>0:56]</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma[0:56,<sp/>56:]<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1a1e93e259f7390bba92ef3f2445aa2112" kindref="member">sigma</ref>[0:56,<sp/>(56+9*n):]</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma[56:,<sp/>0:56]<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1a1e93e259f7390bba92ef3f2445aa2112" kindref="member">sigma</ref>[(56+9*n):,<sp/>0:56]</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma[56:,<sp/>56:]<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1a1e93e259f7390bba92ef3f2445aa2112" kindref="member">sigma</ref>[(56+9*n):,<sp/>(56+9*n):]</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1a1e93e259f7390bba92ef3f2445aa2112" kindref="member">sigma</ref><sp/>=<sp/>sigma</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_state_1a7b6759e1c42e803e7f9d6a97079c3ec1" kindref="member">first_camera_pose_id</ref><sp/>+=<sp/>n</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_state_1a7b6759e1c42e803e7f9d6a97079c3ec1" kindref="member">first_camera_pose_id</ref><sp/>&lt;=<sp/>self.<ref refid="classmsckf_1_1_state_1ae460a78ec25da8e33378372a2dc9943c" kindref="member">past_last_camera_pose_id</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>camera<sp/>pose<sp/>ID<sp/>{}<sp/>-<sp/>{}&quot;</highlight><highlight class="normal">.format(self.<ref refid="classmsckf_1_1_state_1a7b6759e1c42e803e7f9d6a97079c3ec1" kindref="member">first_camera_pose_id</ref>,<sp/>self.<ref refid="classmsckf_1_1_state_1ae460a78ec25da8e33378372a2dc9943c" kindref="member">past_last_camera_pose_id</ref>)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">get_pose_to_pose_rotation(self,<sp/>from_camera_pose_id,<sp/>to_camera_pose_id):</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cache<sp/>this<sp/>!!!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>j<sp/>=<sp/>from_camera_pose_id,<sp/>to_camera_pose_id</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_Cj_G<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1a675ba96049a53a5b524ec12d6b1db492" kindref="member">get_rotation_from_global_to_camera_pose</ref>(j)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_Ci_G<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1a675ba96049a53a5b524ec12d6b1db492" kindref="member">get_rotation_from_global_to_camera_pose</ref>(i)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_Cj_Ci<sp/>=<sp/>q_Cj_G<sp/>*<sp/>q_Ci_G.conjugate()</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>q_Cj_Ci</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">get_position_of_pose_in_another_pose(self,<sp/>target_pose_id,<sp/>reference_pose_id):</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cache<sp/>this<sp/>!!!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>j<sp/>=<sp/>target_pose_id,<sp/>reference_pose_id</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_Cj_G<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1a675ba96049a53a5b524ec12d6b1db492" kindref="member">get_rotation_from_global_to_camera_pose</ref>(j)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_Cj_G<sp/>=<sp/>Quaternion.to_rotation_matrix(q_Cj_G)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_Ci_G<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1a4d73be1dbaa64387ab9914166a1911c7" kindref="member">get_position_of_pose_in_global_frame</ref>(i)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_Cj_G<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1a4d73be1dbaa64387ab9914166a1911c7" kindref="member">get_position_of_pose_in_global_frame</ref>(j)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>R_Cj_G.dot(p_Ci_G<sp/>-<sp/>p_Cj_G)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">get_rotation_from_global_to_camera_pose(self,<sp/>camera_pose_id):</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cache<sp/>this<sp/>!!!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_C_B<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1af4664b6f5c6b28f190702944cea1b206" kindref="member">get_body_to_camera_frame_rotation</ref>()</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_Bto_G<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1ac75587b0f3c1c263d063e437d75a5384" kindref="member">pose</ref>[camera_pose_id].q_B_G</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>q_C_B<sp/>*<sp/>q_Bto_G</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">get_position_of_pose_in_global_frame(self,<sp/>camera_pose_id):</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cache<sp/>this<sp/>!!!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_B_C<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1afea15c330a8f44f4081d612fcf5aaca7" kindref="member">p_B_C</ref></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_C_B<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1af4664b6f5c6b28f190702944cea1b206" kindref="member">get_body_to_camera_frame_rotation</ref>()</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_B_C<sp/>=<sp/>Quaternion.to_rotation_matrix(q_C_B.conjugate())</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_Bi_G<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1ac75587b0f3c1c263d063e437d75a5384" kindref="member">pose</ref>[camera_pose_id].q_B_G</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_G_Bi<sp/>=<sp/>Quaternion.to_rotation_matrix(q_Bi_G.conjugate())</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_Bi_G<sp/>=<sp/>self.<ref refid="classmsckf_1_1_state_1ac75587b0f3c1c263d063e437d75a5384" kindref="member">pose</ref>[camera_pose_id].p_B_G</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_Bi_G<sp/>-<sp/>R_G_Bi.dot(R_B_C).dot(p_B_C)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">time_to(self,<sp/>other):</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Get<sp/>time<sp/>delta<sp/>between<sp/>current<sp/>and<sp/>the<sp/>other<sp/>state&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_state_1abde5f106d34d598e79e5130308fd9103" kindref="member">time</ref><sp/>&lt;<sp/>other.time,<sp/></highlight><highlight class="stringliteral">&quot;Self<sp/>should<sp/>be<sp/>before<sp/>other&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>other.time<sp/>-<sp/>self.<ref refid="classmsckf_1_1_state_1abde5f106d34d598e79e5130308fd9103" kindref="member">time</ref></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">compute_rotation_estimate(self,<sp/>gyro,<sp/>accel):</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inv(self.<ref refid="classmsckf_1_1_state_1acb42c97d2bc8b414e1d123c32d3bce7b" kindref="member">T_g</ref>).dot(gyro<sp/>-<sp/>self.T_s.dot(accel)<sp/>-<sp/>self.<ref refid="classmsckf_1_1_state_1a4685283913afe8e3762f885b1ee49aaa" kindref="member">b_g</ref>)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">compute_acceleration_estimate(self,<sp/>accel):</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inv(self.<ref refid="classmsckf_1_1_state_1ac10d747d657c748a00dec2fadf730cd4" kindref="member">T_a</ref>).dot(accel<sp/>-<sp/>self.<ref refid="classmsckf_1_1_state_1ab5334519dab92512663743a21325b6d0" kindref="member">b_a</ref>)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="classmsckf_1_1_feature_track" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmsckf_1_1_feature_track" kindref="compound">FeatureTrack</ref>():</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>first_image,<sp/>x,<sp/>y):</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_feature_track_1a664793a76ba15a7c337eb848aed653b5" kindref="member">first_image</ref><sp/>=<sp/>first_image</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_feature_track_1a91d7ca320a1c0273410fbb4d16ded316" kindref="member">last_image</ref><sp/>=<sp/>first_image</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_feature_track_1aa6ac9af251f5d7886075ee3ed2c3d892" kindref="member">pixel_coordinates</ref><sp/>=<sp/>[(x,<sp/>y)]</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">next(self,<sp/>x,<sp/>y):</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_feature_track_1a91d7ca320a1c0273410fbb4d16ded316" kindref="member">last_image</ref><sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pixel_coordinates.append((x,<sp/>y))</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">track_length(self):</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_feature_track_1a91d7ca320a1c0273410fbb4d16ded316" kindref="member">last_image</ref><sp/>-<sp/>self.<ref refid="classmsckf_1_1_feature_track_1a664793a76ba15a7c337eb848aed653b5" kindref="member">first_image</ref><sp/>+<sp/>1</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">get_pixel_coordinates_in_image(self,<sp/>image_id):</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>image_id<sp/>&gt;=<sp/>self.<ref refid="classmsckf_1_1_feature_track_1a664793a76ba15a7c337eb848aed653b5" kindref="member">first_image</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Requested<sp/>image<sp/>{}<sp/>is<sp/>before<sp/>feature<sp/>track<sp/>which<sp/>begins<sp/>at<sp/>{}&quot;</highlight><highlight class="normal">.format(image_id,<sp/>self.<ref refid="classmsckf_1_1_feature_track_1a664793a76ba15a7c337eb848aed653b5" kindref="member">first_image</ref>)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>image_id<sp/>&lt;=<sp/>self.<ref refid="classmsckf_1_1_feature_track_1a91d7ca320a1c0273410fbb4d16ded316" kindref="member">last_image</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Requested<sp/>image<sp/>{}<sp/>is<sp/>after<sp/>feature<sp/>track<sp/>which<sp/>ends<sp/>at<sp/>{}&quot;</highlight><highlight class="normal">.format(image_id,<sp/>self.<ref refid="classmsckf_1_1_feature_track_1a91d7ca320a1c0273410fbb4d16ded316" kindref="member">last_image</ref>)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.asarray(self.<ref refid="classmsckf_1_1_feature_track_1aa6ac9af251f5d7886075ee3ed2c3d892" kindref="member">pixel_coordinates</ref>[image_id<sp/>-<sp/>self.<ref refid="classmsckf_1_1_feature_track_1a664793a76ba15a7c337eb848aed653b5" kindref="member">first_image</ref>]).reshape((2,<sp/>1))</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="classmsckf_1_1_image_tracker" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmsckf_1_1_image_tracker" kindref="compound">ImageTracker</ref>():</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self):</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1ac0bdc5e455ec9a9e179f88576444678a" kindref="member">image_counter</ref><sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a5f3fcf1a20788c99f16a3ead38a0931e" kindref="member">last_image</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a6b825a2e9b42766b1ab8c0781ecc5a41" kindref="member">last_kps</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a8cd7b9cfc26ad48bc0adfa8da1e0edcb" kindref="member">last_des</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a2764caa363b3ff3de9f854b47977947d" kindref="member">last_image_was_published</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a61d25a81ca62500d4b64b3c216817e68" kindref="member">last_matches_image</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a5c21c3f90f387f6f1d50814105736ad6" kindref="member">last_features</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1af04b2528381cdaa7ad4ff2558f1634f3" kindref="member">orb</ref><sp/>=<sp/>cv2.ORB(nfeatures=40)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a3b793e2f18c9c29fe8a584d9974c1b6a" kindref="member">matcher</ref><sp/>=<sp/>cv2.BFMatcher(cv2.NORM_HAMMING,<sp/>crossCheck=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">track_next(self,<sp/>image):</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1ac0bdc5e455ec9a9e179f88576444678a" kindref="member">image_counter</ref><sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kps,<sp/>des<sp/>=<sp/>self.orb.detectAndCompute(image,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(len(kps))</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>kps<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>des<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a5f3fcf1a20788c99f16a3ead38a0931e" kindref="member">last_image</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a6b825a2e9b42766b1ab8c0781ecc5a41" kindref="member">last_kps</ref><sp/>=<sp/>kps</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a8cd7b9cfc26ad48bc0adfa8da1e0edcb" kindref="member">last_des</ref><sp/>=<sp/>des</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a5f3fcf1a20788c99f16a3ead38a0931e" kindref="member">last_image</ref><sp/>=<sp/>image</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a2764caa363b3ff3de9f854b47977947d" kindref="member">last_image_was_published</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>kp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kps:</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.last_features.append(<ref refid="classmsckf_1_1_feature_track" kindref="compound">FeatureTrack</ref>(self.<ref refid="classmsckf_1_1_image_tracker_1ac0bdc5e455ec9a9e179f88576444678a" kindref="member">image_counter</ref>,<sp/>kp.pt[0],<sp/>kp.pt[1]))</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.last_des.shape[1]<sp/>==<sp/>des.shape[1]</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matches<sp/>=<sp/>self.matcher.match(self.<ref refid="classmsckf_1_1_image_tracker_1a8cd7b9cfc26ad48bc0adfa8da1e0edcb" kindref="member">last_des</ref>,<sp/>des)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image<sp/>=<sp/>cv2.drawKeypoints(image,<sp/>kps,<sp/>color=(0,<sp/>255,<sp/>0),<sp/>flags=0)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matched_prev<sp/>=<sp/>[</highlight><highlight class="keyword">False</highlight><highlight class="normal">]<sp/>*<sp/>len(self.<ref refid="classmsckf_1_1_image_tracker_1a6b825a2e9b42766b1ab8c0781ecc5a41" kindref="member">last_kps</ref>)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>features<sp/>=<sp/>[</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">]<sp/>*<sp/>len(kps)<sp/></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>match<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>matches:</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_idx<sp/>=<sp/>match.queryIdx</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_idx<sp/>=<sp/>match.trainIdx</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matched_prev[prev_idx]<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Matched<sp/>feature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature<sp/>=<sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a5c21c3f90f387f6f1d50814105736ad6" kindref="member">last_features</ref>[prev_idx]</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kp<sp/>=<sp/>kps[curr_idx]</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.next(kp.pt[0],<sp/>kp.pt[1])</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>features[curr_idx]<sp/>=<sp/>feature</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Features<sp/>to<sp/>residualize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_rezidualize<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>feature,<sp/>matched<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(self.<ref refid="classmsckf_1_1_image_tracker_1a5c21c3f90f387f6f1d50814105736ad6" kindref="member">last_features</ref>,<sp/>matched_prev):</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>matched:</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_rezidualize.append(feature)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_features<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>feature<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(features):</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>feature<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_features<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>features[i]<sp/>=<sp/><ref refid="classmsckf_1_1_feature_track" kindref="compound">FeatureTrack</ref>(self.<ref refid="classmsckf_1_1_image_tracker_1ac0bdc5e455ec9a9e179f88576444678a" kindref="member">image_counter</ref>,<sp/>kps[i].pt[0],<sp/>kps[i].pt[1])</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Features<sp/>{},<sp/>new<sp/>{},<sp/>matched<sp/>{},<sp/>to<sp/>rezidualize<sp/>{}&quot;</highlight><highlight class="normal">.format(len(kps),<sp/>new_features,<sp/>len(matches),<sp/>len(to_rezidualize)))</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a6b825a2e9b42766b1ab8c0781ecc5a41" kindref="member">last_kps</ref><sp/>=<sp/>kps</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a8cd7b9cfc26ad48bc0adfa8da1e0edcb" kindref="member">last_des</ref><sp/>=<sp/>des</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a5f3fcf1a20788c99f16a3ead38a0931e" kindref="member">last_image</ref><sp/>=<sp/>image</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a2764caa363b3ff3de9f854b47977947d" kindref="member">last_image_was_published</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a5c21c3f90f387f6f1d50814105736ad6" kindref="member">last_features</ref><sp/>=<sp/>features</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>to_rezidualize</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">extract_old_features(self,<sp/>age):</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>[feature.track_length()<sp/>&lt;<sp/>age<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>feature<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a5c21c3f90f387f6f1d50814105736ad6" kindref="member">last_features</ref>]</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_residualize<sp/>=<sp/>[f<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f,<sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(self.<ref refid="classmsckf_1_1_image_tracker_1a5c21c3f90f387f6f1d50814105736ad6" kindref="member">last_features</ref>,<sp/>mask)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>m]</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a5c21c3f90f387f6f1d50814105736ad6" kindref="member">last_features</ref><sp/>=<sp/>[f<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f,<sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(self.<ref refid="classmsckf_1_1_image_tracker_1a5c21c3f90f387f6f1d50814105736ad6" kindref="member">last_features</ref>,<sp/>mask)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>m]</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a6b825a2e9b42766b1ab8c0781ecc5a41" kindref="member">last_kps</ref><sp/>=<sp/>[kp<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>kp,<sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(self.<ref refid="classmsckf_1_1_image_tracker_1a6b825a2e9b42766b1ab8c0781ecc5a41" kindref="member">last_kps</ref>,<sp/>mask)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>m]</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a8cd7b9cfc26ad48bc0adfa8da1e0edcb" kindref="member">last_des</ref><sp/>=<sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a8cd7b9cfc26ad48bc0adfa8da1e0edcb" kindref="member">last_des</ref>[np.asarray(mask),<sp/>:]</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>to_residualize</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">image_to_publish(self):</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classmsckf_1_1_image_tracker_1a5f3fcf1a20788c99f16a3ead38a0931e" kindref="member">last_image</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a2764caa363b3ff3de9f854b47977947d" kindref="member">last_image_was_published</ref>:</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a2764caa363b3ff3de9f854b47977947d" kindref="member">last_image_was_published</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_image_tracker_1a5f3fcf1a20788c99f16a3ead38a0931e" kindref="member">last_image</ref></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="classmsckf_1_1_msckf" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmsckf_1_1_msckf" kindref="compound">Msckf</ref>:</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self):</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1aa293c70761d866bcdf8e984a1385de64" kindref="member">imu_subscriber</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a354aa0dd7846a4787802bf3bb7791173" kindref="member">camera_subscriber</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a105ff6012b0df8b799c2be6ab9c76add" kindref="member">pointcloud_publisher</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1aa175e86a112bcc920bd6b8cf54083e86" kindref="member">br</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a5ac0c36ef36e91f2b3a8847145d6e56a" kindref="member">lock</ref><sp/>=<sp/>threading.Lock()</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a65e9d1ff1559e16bd18e01212b428252" kindref="member">listener</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1abe179b3b52794f6c5d4a9598f1286126" kindref="member">cam_to_process</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a787a99dcc98a91e5a571f4e313a96b36" kindref="member">state</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a14270fb94fe42ea7b3c7238afae4ef22" kindref="member">image_tracker</ref><sp/>=<sp/><ref refid="classmsckf_1_1_image_tracker" kindref="compound">ImageTracker</ref>()</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1aa3d7e17f0521408497a79c47039bcdb9" kindref="member">bridge</ref><sp/>=<sp/>CvBridge()</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a9ac9d9d8888316a8b2ebf1b446f17e07" kindref="member">cam_poses</ref><sp/>=<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1ae967978398f1652655b0ad7edd0f9af1" kindref="member">buffer_size_to_initialize</ref><sp/>=<sp/>50</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a8f68a433bdc94aa74889d127d9e91f31" kindref="member">image_rows</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a6e69e72653d9941528a1e4cecbc16371" kindref="member">buffers</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImuDevice.accelerometer:<sp/><ref refid="classmsckf_1_1_imu_buffer" kindref="compound">ImuBuffer</ref>(ImuDevice.accelerometer),</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImuDevice.gyroscope:<sp/><ref refid="classmsckf_1_1_imu_buffer" kindref="compound">ImuBuffer</ref>(ImuDevice.gyroscope)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">callback_imu(self,<sp/>data):</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;got<sp/>imu&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.lock.acquire()</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro<sp/>=<sp/>data.angular_velocity</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accel<sp/>=<sp/>data.linear_acceleration</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>got_some_data<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(gyro.x<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>gyro.y<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>gyro.z<sp/>==<sp/>0):</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1ae226b29e88715596bea9912fa5b9eef9" kindref="member">process_imu</ref>(ImuDevice.gyroscope,<sp/>data.header.stamp.to_sec(),<sp/>gyro.x,<sp/>gyro.y,<sp/>gyro.z)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>got_some_data<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(accel.y<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>accel.y<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>accel.z<sp/>==<sp/>0):</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1ae226b29e88715596bea9912fa5b9eef9" kindref="member">process_imu</ref>(ImuDevice.accelerometer,<sp/>data.header.stamp.to_sec(),<sp/>accel.x,<sp/>accel.y,<sp/>accel.z)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>got_some_data<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>got_some_data:</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_msckf_1a787a99dcc98a91e5a571f4e313a96b36" kindref="member">state</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1abb3ef8cce650ce56470f7f2d23e793c2" kindref="member">try_initialize</ref>()</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_msckf_1a787a99dcc98a91e5a571f4e313a96b36" kindref="member">state</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1ac9935613a6c0603529dc051505c19f63" kindref="member">try_steps</ref>()</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Publish<sp/>localization<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>updated:</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1acf89b57822a098ee1a650849a37361eb" kindref="member">publish_localization</ref>()</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1ab55273376c5e47b07ba919d6486a40b2" kindref="member">publish_image_if_new_available</ref>()</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traceback.print_exc(file=sys.stderr)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.signal_shutdown(</highlight><highlight class="stringliteral">&quot;ROSPy<sp/>Shutdown&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.lock.release()</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">process_imu(self,<sp/>device,<sp/>timestamp,<sp/>x,<sp/>y,<sp/>z):</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/><ref refid="classmsckf_1_1_imu_item" kindref="compound">ImuItem</ref>(device,<sp/>timestamp,<sp/>np.asarray([x,<sp/>y,<sp/>z]).reshape((3,<sp/>1)))</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a6e69e72653d9941528a1e4cecbc16371" kindref="member">buffers</ref>[device].push(item)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">callback_camera(self,<sp/>data):</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;got<sp/>camera&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.lock.acquire()</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_msckf_1a787a99dcc98a91e5a571f4e313a96b36" kindref="member">state</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>data.header.stamp.to_sec()</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_msckf_1abe179b3b52794f6c5d4a9598f1286126" kindref="member">cam_to_process</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv_image<sp/>=<sp/>self.bridge.imgmsg_to_cv2(data,<sp/></highlight><highlight class="stringliteral">&quot;bgr8&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>CvBridgeError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(e)</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit()</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>cv_image.shape<sp/>==<sp/>(480,<sp/>640,<sp/>3)</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a8f68a433bdc94aa74889d127d9e91f31" kindref="member">image_rows</ref><sp/>=<sp/>480</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1abe179b3b52794f6c5d4a9598f1286126" kindref="member">cam_to_process</ref><sp/>=<sp/><ref refid="classmsckf_1_1_camera_item" kindref="compound">CameraItem</ref>(time,<sp/>cv_image)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traceback.print_exc(file=sys.stderr)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.signal_shutdown(</highlight><highlight class="stringliteral">&quot;ROSPy<sp/>Shutdown&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.lock.release()</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">try_initialize(self):</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wait<sp/>for<sp/>forst<sp/>$n$<sp/>measurements<sp/>from<sp/>both<sp/>sensors<sp/>and<sp/>then<sp/>initialize<sp/>filter<sp/>using<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>I<sp/>also<sp/>use<sp/>them<sp/>for<sp/>propagation<sp/>to<sp/>help<sp/>filter<sp/>initialize<sp/>early<sp/>(instead<sp/>of<sp/>waiting<sp/>for<sp/>more<sp/>measurements)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>min(len(self.<ref refid="classmsckf_1_1_msckf_1a6e69e72653d9941528a1e4cecbc16371" kindref="member">buffers</ref>[ImuDevice.accelerometer]),<sp/>len(self.<ref refid="classmsckf_1_1_msckf_1a6e69e72653d9941528a1e4cecbc16371" kindref="member">buffers</ref>[ImuDevice.gyroscope]))<sp/>&lt;<sp/>self.<ref refid="classmsckf_1_1_msckf_1ae967978398f1652655b0ad7edd0f9af1" kindref="member">buffer_size_to_initialize</ref>:</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accel_buffer<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1a6e69e72653d9941528a1e4cecbc16371" kindref="member">buffers</ref>[ImuDevice.accelerometer]</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro_buffer<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1a6e69e72653d9941528a1e4cecbc16371" kindref="member">buffers</ref>[ImuDevice.gyroscope]</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>max(accel_buffer.min.time,<sp/>gyro_buffer.min.time)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accel_item<sp/>=<sp/>accel_buffer.interpolate(time)</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro_item<sp/>=<sp/>gyro_buffer.interpolate(time)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>accel_buffer[1].time<sp/>&lt;<sp/>gyro_buffer[1].time:</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accel_buffer.pop_min()</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro_buffer.pop_min()</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>file(</highlight><highlight class="stringliteral">&apos;config.yaml&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;</highlight><highlight class="stringliteral">r&apos;)<sp/>as<sp/>o:</highlight></codeline>
<codeline lineno="670"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config<sp/>=<sp/>yaml.load(o)</highlight></codeline>
<codeline lineno="671"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="672"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a787a99dcc98a91e5a571f4e313a96b36" kindref="member">state</ref><sp/>=<sp/><ref refid="classmsckf_1_1_state" kindref="compound">State</ref>(accel_item,<sp/>gyro_item,<sp/>accel_buffer.mean_value)</highlight></codeline>
<codeline lineno="673"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.body_state.q_B_G<sp/>=<sp/>np.quaternion(*config[</highlight><highlight class="stringliteral">&apos;orientation&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;init&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.body_state.p_B_G<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;position&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;init&apos;</highlight><highlight class="normal">]).reshape((3,<sp/>1))</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.body_state.v_B_G<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;velocity&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;init&apos;</highlight><highlight class="normal">]).reshape((3,<sp/>1))</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.b_a<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;accelerometer_bias&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;init&apos;</highlight><highlight class="normal">]).reshape((3,<sp/>1))</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.b_g<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;gyroscope_bias&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;init&apos;</highlight><highlight class="normal">]).reshape((3,<sp/>1))</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.T_g<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;gyroscope_shape&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;init&apos;</highlight><highlight class="normal">]).reshape((3,<sp/>3))</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.T_s<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;gyroscope_acceleration_sensitivity&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;init&apos;</highlight><highlight class="normal">]).reshape((3,<sp/>3))</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.T_a<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;accelerometer_shape&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;init&apos;</highlight><highlight class="normal">]).reshape((3,<sp/>3))</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.p_B_C<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;body_position_in_camera_frame&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;init&apos;</highlight><highlight class="normal">]).reshape((3,<sp/>1))</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.f_x,<sp/>self.state.f_y<sp/>=<sp/>tuple(config[</highlight><highlight class="stringliteral">&apos;focal_length&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;init&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.o_x,<sp/>self.state.o_y<sp/>=<sp/>tuple(config[</highlight><highlight class="stringliteral">&apos;optical_center&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;init&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.k_1,<sp/>self.state.k_2,<sp/>self.state.k_3<sp/>=<sp/>tuple(config[</highlight><highlight class="stringliteral">&apos;radial_distortion&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;init&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.t_1,<sp/>self.state.t_2<sp/>=<sp/>tuple(config[</highlight><highlight class="stringliteral">&apos;tangential_distortion&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;init&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a2e46d6304ad2781ab231eb5cbaa935a0" kindref="member">t_d</ref><sp/>=<sp/>config[</highlight><highlight class="stringliteral">&apos;camera_delay_time&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;init&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1af788a1595dc960d3f58cc28ba33228d4" kindref="member">t_r</ref><sp/>=<sp/>config[</highlight><highlight class="stringliteral">&apos;camera_readout_time&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;init&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_diag<sp/>=<sp/>np.zeros(56)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_diag[0:3]<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;orientation&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;sigma&apos;</highlight><highlight class="normal">]).reshape((3,<sp/>))</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_diag[3:6]<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;position&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;sigma&apos;</highlight><highlight class="normal">]).reshape((3,<sp/>))</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_diag[6:9]<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;velocity&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;sigma&apos;</highlight><highlight class="normal">]).reshape((3,<sp/>))</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_diag[9:12]<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;accelerometer_bias&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;sigma&apos;</highlight><highlight class="normal">]).reshape((3,<sp/>))</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_diag[12:15]<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;gyroscope_bias&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;sigma&apos;</highlight><highlight class="normal">]).reshape((3,<sp/>))</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_diag[15:24]<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;gyroscope_shape&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;sigma&apos;</highlight><highlight class="normal">]).reshape((9,<sp/>))</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_diag[24:33]<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;gyroscope_acceleration_sensitivity&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;sigma&apos;</highlight><highlight class="normal">]).reshape((9,<sp/>))</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_diag[33:42]<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;accelerometer_shape&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;sigma&apos;</highlight><highlight class="normal">]).reshape((9,<sp/>))</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_diag[42:45]<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;body_position_in_camera_frame&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;sigma&apos;</highlight><highlight class="normal">]).reshape((3,<sp/>))</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_diag[45:47]<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;focal_length&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;sigma&apos;</highlight><highlight class="normal">]).reshape((2,<sp/>))</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_diag[47:49]<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;optical_center&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;sigma&apos;</highlight><highlight class="normal">]).reshape((2,<sp/>))</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_diag[49:52]<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;radial_distortion&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;sigma&apos;</highlight><highlight class="normal">]).reshape((3,<sp/>))</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_diag[52:54]<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;tangential_distortion&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;sigma&apos;</highlight><highlight class="normal">]).reshape((2,<sp/>))</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_diag[54:55]<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;camera_delay_time&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;sigma&apos;</highlight><highlight class="normal">]).reshape((1,<sp/>))</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_diag[55:56]<sp/>=<sp/>np.asarray(config[</highlight><highlight class="stringliteral">&apos;camera_readout_time&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;sigma&apos;</highlight><highlight class="normal">]).reshape((1,<sp/>))</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.sigma<sp/>=<sp/>np.diag(sigma_diag)</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\033[0;32mFilter<sp/>was<sp/>successfully<sp/>initialized<sp/>at<sp/>time<sp/>{:.5f}\033[0m&quot;</highlight><highlight class="normal">.format(self.state.time))</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">try_steps(self):</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_msckf_1a787a99dcc98a91e5a571f4e313a96b36" kindref="member">state</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_msckf_1abe179b3b52794f6c5d4a9598f1286126" kindref="member">cam_to_process</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera_delay_time<sp/>=<sp/>self.state.t_d</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera_readout_time<sp/>=<sp/>self.state.t_r</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>`camera_readout_time`<sp/>might<sp/>be<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera_read_start<sp/>=<sp/>self.cam_to_process.time<sp/>+<sp/>camera_delay_time<sp/>-<sp/>abs(camera_readout_time)<sp/>/<sp/>2</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera_read_end<sp/>=<sp/>self.cam_to_process.time<sp/>+<sp/>camera_delay_time<sp/>+<sp/>abs(camera_readout_time)<sp/>/<sp/>2</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_accel_before_image_read<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1a6e69e72653d9941528a1e4cecbc16371" kindref="member">buffers</ref>[ImuDevice.accelerometer].min.time<sp/>&lt;=<sp/>camera_read_start</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_accel_after_image_read<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1a6e69e72653d9941528a1e4cecbc16371" kindref="member">buffers</ref>[ImuDevice.accelerometer].max.time<sp/>&gt;=<sp/>camera_read_end</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_gyro_before_image_read<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1a6e69e72653d9941528a1e4cecbc16371" kindref="member">buffers</ref>[ImuDevice.gyroscope].min.time<sp/>&lt;=<sp/>camera_read_start</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_gyro_after_image_read<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1a6e69e72653d9941528a1e4cecbc16371" kindref="member">buffers</ref>[ImuDevice.gyroscope].max.time<sp/>&gt;=<sp/>camera_read_end</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accel_ok<sp/>=<sp/>has_accel_before_image_read<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>has_accel_after_image_read</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro_ok<sp/>=<sp/>has_gyro_before_image_read<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>has_gyro_after_image_read</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>accel_ok)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>gyro_ok):</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ready<sp/>for<sp/>processing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a5f8d7a1f9f02faaa3ce4dcf23e7024ff" kindref="member">propagate_up_to_time_incl</ref>(self.cam_to_process.time<sp/>+<sp/>camera_delay_time)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Filter<sp/>at<sp/>time<sp/>{}&apos;</highlight><highlight class="normal">.format(self.state.time))</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a2a9394d1a3c7220d2804cbb6ca103b4f" kindref="member">update</ref>()</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">propagate_up_to_time_incl(self,<sp/>t):</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Propatage<sp/>up<sp/>to<sp/>time<sp/>$t$.<sp/>It<sp/>is<sp/>guaranteed<sp/>that<sp/>IMU<sp/>measurements<sp/>are<sp/>available.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>isinstance(t,<sp/>float),<sp/></highlight><highlight class="stringliteral">&apos;Expected<sp/>`float`.<sp/>Got<sp/>{}.&apos;</highlight><highlight class="normal">.format(type(t))</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accel_buffer<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1a6e69e72653d9941528a1e4cecbc16371" kindref="member">buffers</ref>[ImuDevice.accelerometer]</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro_buffer<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1a6e69e72653d9941528a1e4cecbc16371" kindref="member">buffers</ref>[ImuDevice.gyroscope]</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should_continue<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>should_continue:</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accel_ptr<sp/>=<sp/>bisect.bisect_right(accel_buffer,<sp/>self.state.time)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro_ptr<sp/>=<sp/>bisect.bisect_right(gyro_buffer,<sp/>self.state.time)</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step_time<sp/>=<sp/>min(accel_buffer[accel_ptr].time,<sp/>gyro_buffer[gyro_ptr].time)</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>step_time<sp/>&gt;<sp/>t:</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should_continue<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step_time<sp/>=<sp/>t</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accel_item<sp/>=<sp/>accel_buffer.interpolate(step_time)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro_item<sp/>=<sp/>gyro_buffer.interpolate(step_time)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.propagate(accel_item,<sp/>gyro_item)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.state.time<sp/>!=<sp/>t:</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Filter<sp/>is<sp/>propagated<sp/>only<sp/>to<sp/>time<sp/>{:.5f}.<sp/>Expected<sp/>{:.5f}&apos;</highlight><highlight class="normal">.format(self.state.time,<sp/>t),<sp/>sys.stderr)</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit()</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">update(self):</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Perform<sp/>MSCKF<sp/>update<sp/>step.<sp/>State<sp/>is<sp/>already<sp/>propagated<sp/>to<sp/>time<sp/>$t<sp/>+<sp/>\\hat{t}_d$.&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_msckf_1abe179b3b52794f6c5d4a9598f1286126" kindref="member">cam_to_process</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>abs(self.state.time<sp/>-<sp/>(self.cam_to_process.time<sp/>+<sp/>self.state.t_d))<sp/>&lt;<sp/>1e-6,<sp/></highlight><highlight class="stringliteral">&apos;Filter<sp/>is<sp/>not<sp/>propagated<sp/>to<sp/>{:.5f}.<sp/>Current<sp/>time<sp/>{:.5f}&apos;</highlight><highlight class="normal">.format(self.cam_to_process.time,<sp/>self.state.time)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Pose<sp/>difference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(self.state.camera_poses)<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>np.power(np.power(self.state.body_state.p_B_G<sp/>-<sp/>self.state.camera_poses[-1].p_B_G,<sp/>2).sum(),<sp/>0.5)</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dist<sp/>&lt;<sp/>0.2:</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_yellow(</highlight><highlight class="stringliteral">&apos;Distance<sp/>is<sp/>{:.3f},<sp/>skipping.&apos;</highlight><highlight class="normal">.format(dist))</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1abe179b3b52794f6c5d4a9598f1286126" kindref="member">cam_to_process</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image<sp/>=<sp/>self.cam_to_process.image</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1abe179b3b52794f6c5d4a9598f1286126" kindref="member">cam_to_process</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>self.tfBuffer.lookup_transform(</highlight><highlight class="stringliteral">&apos;world&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;base_link&apos;</highlight><highlight class="normal">,<sp/>rospy.Time.from_sec(self.state.time))</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>t.transform.translation</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>att<sp/>=<sp/>t.transform.rotation</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Transform<sp/>lookup<sp/>OK&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>(tf2_ros.LookupException,<sp/>tf2_ros.ConnectivityException,<sp/>tf2_ros.ExtrapolationException)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Transformation<sp/>lookup<sp/>failed<sp/>{}&apos;</highlight><highlight class="normal">.format(e))</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_rezidualize<sp/>=<sp/>self.image_tracker.track_next(image)</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>too_old<sp/>=<sp/>self.image_tracker.extract_old_features(15)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>feature<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>too_old:</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.pixel_coordinates<sp/>=<sp/>feature.pixel_coordinates[:-1]</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.last_image<sp/>-=<sp/>1</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_rezidualize.append(feature)</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a9ac9d9d8888316a8b2ebf1b446f17e07" kindref="member">cam_poses</ref>[self.image_tracker.image_counter]<sp/>=<sp/>len(self.image_tracker.last_kps)</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.augment()</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.camera_poses[-1].p_B_G<sp/>=<sp/>np.asarray([pos.x,<sp/>pos.y,<sp/>pos.z]).reshape((3,<sp/>1))</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.camera_poses[-1].q_B_G<sp/>=<sp/>np.quaternion(att.w,<sp/>att.x,<sp/>att.y,<sp/>att.z)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Cam<sp/>poses:<sp/>{}&apos;</highlight><highlight class="normal">.format(len(self.state.camera_poses)))</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointcloud<sp/>=<sp/>PointCloud()</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointcloud.header<sp/>=<sp/>Header()</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointcloud.header.stamp<sp/>=<sp/>rospy.Time.now()</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointcloud.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;world&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Do<sp/>actual<sp/>MSCKF<sp/>update<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_list,<sp/>r_list<sp/>=<sp/>[],<sp/>[]</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poses_to_remove<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>feature<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>to_rezidualize:</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(feature.first_image,<sp/>feature.last_image<sp/>+<sp/>1):</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a9ac9d9d8888316a8b2ebf1b446f17e07" kindref="member">cam_poses</ref>[i]<sp/>-=<sp/>1</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classmsckf_1_1_msckf_1a9ac9d9d8888316a8b2ebf1b446f17e07" kindref="member">cam_poses</ref>[i]<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poses_to_remove<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>feature.track_length()<sp/>&lt;=<sp/>3:</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_position<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1a59f002d186ffda17b1a1dcc8d2a723de" kindref="member">compute_global_feature_estimate</ref>(self.<ref refid="classmsckf_1_1_msckf_1a787a99dcc98a91e5a571f4e313a96b36" kindref="member">state</ref>,<sp/>feature)</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>global_position<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Skipping<sp/>feature<sp/>due<sp/>to<sp/>unsuccessful<sp/>global<sp/>localization&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poses_in_state<sp/>=<sp/>len(self.state.camera_poses)</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_j_list,<sp/>H_x_list,<sp/>H_f_list<sp/>=<sp/>[],<sp/>[],<sp/>[]</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pose_id<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(feature.first_image,<sp/>feature.last_image<sp/>+<sp/>1):</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>track_length<sp/>=<sp/>feature.track_length()</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>poses_in_state-track_length-1+(pose_id-feature.first_image)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_z,<sp/>y_z<sp/>=<sp/>feature.pixel_coordinates[pose_id<sp/>-<sp/>feature.first_image]</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>np.asarray([x_z,<sp/>y_z]).reshape((2,<sp/>1))</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera_pose<sp/>=<sp/>self.state.camera_poses[j]</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1a8f68a433bdc94aa74889d127d9e91f31" kindref="member">image_rows</ref><sp/>/<sp/>2.0</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>y_z<sp/>-<sp/>N</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_r<sp/>=<sp/>self.state.t_r</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_time<sp/>=<sp/>camera_pose.time<sp/>+<sp/>k*t_r<sp/>/<sp/>N</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro_item<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1a6e69e72653d9941528a1e4cecbc16371" kindref="member">buffers</ref>[ImuDevice.gyroscope].interpolate(feature_time)</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accel_item<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1a6e69e72653d9941528a1e4cecbc16371" kindref="member">buffers</ref>[ImuDevice.accelerometer].interpolate(feature_time)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotation_estimate<sp/>=<sp/>self.state.compute_rotation_estimate(gyro_item.value,<sp/>accel_item.value)</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceleration_estimate<sp/>=<sp/>self.state.compute_acceleration_estimate(accel_item.value)</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_pose<sp/>=<sp/>BodyState.propagate(camera_pose,<sp/>feature_time,<sp/>rotation_estimate,<sp/>acceleration_estimate)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_C_B<sp/>=<sp/>self.state.get_body_to_camera_frame_rotation()</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_C_B<sp/>=<sp/>Quaternion.to_rotation_matrix(q_C_B)</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_Bj_G<sp/>=<sp/>Quaternion.to_rotation_matrix(feature_pose.q_B_G)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_B_C<sp/>=<sp/>self.state.p_B_C</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotation_compound<sp/>=<sp/>Quaternion.to_rotation_matrix(q_C_B<sp/>*<sp/>feature_pose.q_B_G)</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_f_C<sp/>=<sp/>rotation_compound.dot(global_position<sp/>-<sp/>feature_pose.p_B_G)<sp/>+<sp/>p_B_C</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_hat<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1a0868335826b7b55548236cd06e7a248c" kindref="member">pinhole_model</ref>(self.<ref refid="classmsckf_1_1_msckf_1a787a99dcc98a91e5a571f4e313a96b36" kindref="member">state</ref>,<sp/>p_f_C)</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>z_hat.shape<sp/>==<sp/>(2,<sp/>1)</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_j<sp/>=<sp/>z<sp/>-<sp/>z_hat</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>r_j.shape<sp/>==<sp/>(2,<sp/>1)</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>J_h<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1a67a09f9f462392f3bb707ac698b6ed0e" kindref="member">camera_jacobian</ref>(p_f_C,<sp/>self.<ref refid="classmsckf_1_1_msckf_1a787a99dcc98a91e5a571f4e313a96b36" kindref="member">state</ref>)</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_i_j<sp/>=<sp/>J_h.dot(rotation_compound)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_x_Bj<sp/>=<sp/>M_i_j.dot(np.hstack([</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion.cross_matrix(global_position<sp/>-<sp/>feature_pose.p_B_G),</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1*np.eye(3),</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1*(k*t_r<sp/>/<sp/>N)<sp/>*<sp/>np.eye(3)<sp/></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]))</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_f_j<sp/>=<sp/>M_i_j</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>H_f_j.shape<sp/>==<sp/>(2,<sp/>3)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_by_p_B_C<sp/>=<sp/>J_h</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>z_by_p_B_C.shape<sp/>==<sp/>(2,<sp/>3)</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>=<sp/>global_position[0,<sp/>0]<sp/>/<sp/>global_position[2,<sp/>0]</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>global_position[1,<sp/>0]<sp/>/<sp/>global_position[2,<sp/>0]</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>u*u<sp/>+<sp/>v*v</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_r<sp/>=<sp/>1<sp/>+<sp/>self.state.k_1*r<sp/>+<sp/>self.state.k_2*(r*r)<sp/>+<sp/>self.state.k_3*(r**3)</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_t<sp/>=<sp/>np.array([</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2*u*v*self.state.t_1<sp/>+<sp/>(r<sp/>+<sp/>2*(u*u))*self.state.t_2,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2*u*v*self.state.t_2<sp/>+<sp/>(r<sp/>+<sp/>2*(v*v))*self.state.t_1</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]).reshape((2,<sp/>1))</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_fx<sp/>=<sp/>np.array([d_r*u<sp/>+<sp/>d_t[0,<sp/>0],<sp/>0]).reshape((2,<sp/>1))</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_fy<sp/>=<sp/>np.array([0,<sp/>d_r*v<sp/>+<sp/>d_t[1,<sp/>0]]).reshape((2,<sp/>1))</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_ox<sp/>=<sp/>np.array([1.0,<sp/>0.0]).reshape((2,<sp/>1))</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_oy<sp/>=<sp/>np.array([0.0,<sp/>1.0]).reshape((2,<sp/>1))</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_k1<sp/>=<sp/>np.array([</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.f_x<sp/>*<sp/>u<sp/>*<sp/>r,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.f_y<sp/>*<sp/>v<sp/>*<sp/>r</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]).reshape((2,<sp/>1))</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_k2<sp/>=<sp/>r<sp/>*<sp/>h_by_k1</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_k3<sp/>=<sp/>r<sp/>*<sp/>h_by_k2</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_t1<sp/>=<sp/>np.array([</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.f_x<sp/>*<sp/>(2*u*v),</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.f_y<sp/>*<sp/>(r<sp/>+<sp/>2*(v*v))</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]).reshape((2,<sp/>1))</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_t2<sp/>=<sp/>np.array([</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.f_x<sp/>*<sp/>(r<sp/>+<sp/>2*(u*u)),</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.f_y<sp/>*<sp/>(2*u*v)</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]).reshape((2,<sp/>1))</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_by_x_cam<sp/>=<sp/>np.hstack([</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_fx,</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_fy,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_ox,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_oy,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_k1,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_k2,</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_k3,</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_t1,</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_by_t2</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>z_by_x_cam.shape<sp/>==<sp/>(2,<sp/>9)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cross_matrix_part<sp/>=<sp/>Quaternion.cross_matrix(R_Bj_G.dot(global_position<sp/>-<sp/>feature_pose.p_B_G))</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_by_t_d<sp/>=<sp/>J_h.dot(R_C_B).dot(cross_matrix_part.dot(feature_pose.rotation_estimate)<sp/>-<sp/>R_Bj_G.dot(feature_pose.v_B_G))</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_by_t_r<sp/>=<sp/>(k/N)*z_by_t_d</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_c_j<sp/>=<sp/>np.hstack([z_by_p_B_C,<sp/>z_by_x_cam,<sp/>z_by_t_d,<sp/>z_by_t_r])</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>H_c_j.shape<sp/>==<sp/>(2,<sp/>14),<sp/></highlight><highlight class="stringliteral">&apos;Expected<sp/>`H_c_j`<sp/>to<sp/>have<sp/>shape<sp/>(2,<sp/>14).<sp/>Got<sp/>{}&apos;</highlight><highlight class="normal">.format(H_c_j.shape)</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_x_j<sp/>=<sp/>np.zeros((2,<sp/>56<sp/>+<sp/>9*len(self.state.camera_poses)))</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_x_j[:,<sp/>42:56]<sp/>=<sp/>H_c_j</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_x_j[:,<sp/>(56+9*j):(56+9*(j+1))]<sp/>=<sp/>H_x_Bj</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_j_list.append(r_j)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_x_list.append(H_x_j)</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_f_list.append(H_f_j)</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>np.vstack(r_j_list)</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_x<sp/>=<sp/>np.vstack(H_x_list)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_f<sp/>=<sp/>np.vstack(H_f_list)</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#q,<sp/>_<sp/>=<sp/>np.linalg.qr(H_f,<sp/>mode=&apos;complete&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#A<sp/>=<sp/>q[:,<sp/>-1*(H_f.shape[0]-H_f.shape[1]):]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>=<sp/>null(H_f.T,<sp/>eps=1e-18)</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#np.testing.assert_allclose(A.T.dot(H_f),<sp/>np.zeros((rank,<sp/>H_f.shape[1])))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#np.testing.assert_allclose(A.T.dot(H_f),<sp/>np.zeros((H_f.shape[0]<sp/>-<sp/>H_f.shape[1],<sp/>H_f.shape[1])),<sp/>atol=1e-4,<sp/>rtol=0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>A.shape<sp/>==<sp/>(H_f.shape[0],<sp/>H_f.shape[0]-H_f.shape[1]),<sp/></highlight><highlight class="stringliteral">&apos;Expected<sp/>`A`<sp/>to<sp/>have<sp/>shape<sp/>{}.<sp/>Got<sp/>{}&apos;</highlight><highlight class="normal">.format((H_f.shape[0],<sp/>H_f.shape[0]-H_f.shape[1]),<sp/>A.shape)</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.testing.assert_allclose(H_f.T.dot(A),<sp/>np.zeros((H_f.shape[1],<sp/>H_f.shape[0]<sp/>-<sp/>H_f.shape[1])),<sp/>atol=1e-4,<sp/>rtol=0)</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.testing.assert_allclose(A.T.dot(H_f),<sp/>np.zeros((H_f.shape[0]<sp/>-<sp/>H_f.shape[1],<sp/>H_f.shape[1])),<sp/>atol=1e-4,<sp/>rtol=0)</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.testing.assert_allclose(A.T.dot(A),<sp/>np.eye(H_f.shape[0]-H_f.shape[1]),<sp/>atol=1e-4,<sp/>rtol=0)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_0<sp/>=<sp/>A.T.dot(r)</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_0<sp/>=<sp/>A.T.dot(H_x)</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gamma_inner<sp/>=<sp/>inv(H_0.dot(self.state.sigma).dot(H_0.T))</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>np.linalg.LinAlgError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(e)</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gamma_i<sp/>=<sp/>r_0.T.dot(gamma_inner).dot(r_0)</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdf_threshold<sp/>=<sp/>scipy.stats.chi2.cdf(0.95,<sp/>r_0.shape[0])</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>gamma_i[0,<sp/>0]<sp/>&gt;<sp/>cdf_threshold:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>print(&apos;Feature<sp/>rejected<sp/>by<sp/>gating<sp/>test.<sp/>Gamma:<sp/>{:.5f}<sp/>threshold:<sp/>{:.5f}&apos;.format(gamma_i[0,<sp/>0],<sp/>cdf_threshold))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointcloud.points.append(Point32(global_position[0,<sp/>0],<sp/>global_position[1,<sp/>0],<sp/>global_position[2,<sp/>0]))</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_list.append(r_0)</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_list.append(H_0)</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pointcloud_publisher.publish(pointcloud)</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(r_list)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;\033[0;35mNo<sp/>features<sp/>to<sp/>update<sp/>with.\033[0m&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.remove_n_cam_poses(poses_to_remove)</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>np.vstack(r_list)</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H<sp/>=<sp/>np.vstack(H_list)</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Passed<sp/>{}<sp/>out<sp/>of<sp/>{}&apos;</highlight><highlight class="normal">.format(len(r_list),<sp/>len(to_rezidualize)))</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_im<sp/>=<sp/>1e-2</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q,<sp/>r_qr<sp/>=<sp/>np.linalg.qr(H,<sp/>mode=</highlight><highlight class="stringliteral">&apos;complete&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>q.shape<sp/>==<sp/>(H.shape[0],<sp/>H.shape[0])</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_all_zero_rows<sp/>=<sp/>np.all(r_qr<sp/>==<sp/>0,<sp/>axis=1).sum()</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>q[:,<sp/>0:(r_qr.shape[0]-num_all_zero_rows)]</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_H<sp/>=<sp/>r_qr[0:(r_qr.shape[0]-num_all_zero_rows),<sp/>:]</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>q1.shape[1]<sp/>==<sp/>T_H.shape[0],<sp/></highlight><highlight class="stringliteral">&apos;q1.shape[1]<sp/>==<sp/>{}<sp/>&amp;<sp/>T_H.shape[0]<sp/>==<sp/>{}&apos;</highlight><highlight class="normal">.format(q1.shape[1],<sp/>T_H.shape[0])</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_q<sp/>=<sp/>sigma_im<sp/>*<sp/>np.eye(q1.shape[1])</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K<sp/>=<sp/>self.state.sigma.dot(T_H.T).dot(inv(T_H.dot(self.state.sigma).dot(T_H.T)<sp/>+<sp/>R_q))</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I_beta<sp/>=<sp/>np.eye(self.state.sigma.shape[0])</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_part<sp/>=<sp/>I_beta<sp/>-<sp/>K.dot(T_H)</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.sigma<sp/>=<sp/>sigma_part.dot(self.state.sigma).dot(sigma_part.T)<sp/>+<sp/>K.dot(R_q).dot(K.T)</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_q<sp/>=<sp/>q1.T.dot(r)</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta_x<sp/>=<sp/>K.dot(r_q)</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Update<sp/>State</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.body_state.q_B_G<sp/>=<sp/>self.state.q_B_G<sp/>*<sp/>np.quaternion(1.0,<sp/>*((0.5*delta_x[0:3,<sp/>0]).tolist())).normalized()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.body_state.p_B_G<sp/>+=<sp/>delta_x[3:6,<sp/>0].reshape((3,<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.body_state.v_B_G<sp/>+=<sp/>delta_x[6:9,<sp/>0].reshape((3,<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.b_g<sp/>+=<sp/>delta_x[9:12,<sp/>0].reshape((3,<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.b_a<sp/>+=<sp/>delta_x[12:15,<sp/>0].reshape((3,<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.T_g<sp/>+=<sp/>delta_x[15:24,<sp/>0].reshape((3,<sp/>3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.T_s<sp/>+=<sp/>delta_x[24:33,<sp/>0].reshape((3,<sp/>3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.T_a<sp/>+=<sp/>delta_x[33:42,<sp/>0].reshape((3,<sp/>3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.p_B_C<sp/>+=<sp/>delta_x[42:45,<sp/>0].reshape((3,<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.f_x<sp/>+=<sp/>delta_x[45,<sp/>0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.f_y<sp/>+=<sp/>delta_x[46,<sp/>0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.o_x<sp/>+=<sp/>delta_x[47,<sp/>0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.o_y<sp/>+=<sp/>delta_x[48,<sp/>0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.k_1<sp/>+=<sp/>delta_x[49,<sp/>0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.k_2<sp/>+=<sp/>delta_x[50,<sp/>0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.k_3<sp/>+=<sp/>delta_x[51,<sp/>0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.t_1<sp/>+=<sp/>delta_x[52,<sp/>0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.t_2<sp/>+=<sp/>delta_x[53,<sp/>0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.t_d<sp/>+=<sp/>delta_x[54,<sp/>0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.state.t_r<sp/>+=<sp/>delta_x[55,<sp/>0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#for<sp/>i<sp/>in<sp/>range(len(self.state.camera_poses)):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>cam_pose<sp/>=<sp/>self.state.camera_poses[i]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>cam_pose.q_B_G<sp/>=<sp/>cam_pose.q_B_G<sp/>*<sp/>np.quaternion(1,<sp/>*((0.5*delta_x[(56+(9*i)+0):56+(9*i)+3,<sp/>0]).tolist())).normalized()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>cam_pose.p_B_G<sp/>+=<sp/>delta_x[(56+(9*i)+3):56+(9*i)+6,<sp/>0].reshape((3,<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>cam_pose.v_B_G<sp/>+=<sp/>delta_x[(56+(9*i)+6):56+(9*i)+9,<sp/>0].reshape((3,<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_yellow_bold(</highlight><highlight class="stringliteral">&apos;p:<sp/>({:.1f},<sp/>{:.1f},<sp/>{:.1f})&apos;</highlight><highlight class="normal">.format(self.state.p_B_G[0,<sp/>0],<sp/>self.state.p_B_G[1,<sp/>0],<sp/>self.state.p_B_G[2,<sp/>0]))</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_yellow(</highlight><highlight class="stringliteral">&apos;bias<sp/>accel:<sp/>[{:.5f},<sp/>{:.5f},<sp/>{:.5f}]&apos;</highlight><highlight class="normal">.format(self.state.b_a[0,<sp/>0],<sp/>self.state.b_a[1,<sp/>0],<sp/>self.state.b_a[2,<sp/>0]))</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_yellow(</highlight><highlight class="stringliteral">&apos;bias<sp/>gyro:<sp/>[{:.5f},<sp/>{:.5f},<sp/>{:.5f}]&apos;</highlight><highlight class="normal">.format(self.state.b_g[0,<sp/>0],<sp/>self.state.b_g[1,<sp/>0],<sp/>self.state.b_g[2,<sp/>0]))</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_yellow(</highlight><highlight class="stringliteral">&apos;tangential<sp/>dist.:<sp/>({:.5f},<sp/>{:.5f},<sp/>{:.5f})&apos;</highlight><highlight class="normal">.format(self.state.k_1,<sp/>self.state.k_2,<sp/>self.state.k_3))</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_yellow(</highlight><highlight class="stringliteral">&apos;radial<sp/>dist.:<sp/>({:.5f},<sp/>{:.5f})&apos;</highlight><highlight class="normal">.format(self.state.t_1,<sp/>self.state.t_2))</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_yellow(</highlight><highlight class="stringliteral">&apos;t_d:<sp/>{:.5f}&apos;</highlight><highlight class="normal">.format(self.state.t_d))</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_yellow(</highlight><highlight class="stringliteral">&apos;t_r:<sp/>{:.5f}&apos;</highlight><highlight class="normal">.format(self.state.t_r))</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Clean<sp/>up<sp/>unused<sp/>camera<sp/>poses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.state.remove_n_cam_poses(poses_to_remove)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">triangulate(self,<sp/>z1,<sp/>z2,<sp/>R_C1_C0,<sp/>p_C1_C0):</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v1<sp/>=<sp/>np.asarray([z1[0,<sp/>0],<sp/>z1[1,<sp/>0],<sp/>1]).reshape((3,<sp/>1))</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2<sp/>=<sp/>np.asarray([z2[0,<sp/>0],<sp/>z2[1,<sp/>0],<sp/>1]).reshape((3,<sp/>1))</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v1<sp/>=<sp/>v1<sp/>/<sp/>np.linalg.norm(v1)</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2<sp/>=<sp/>v2<sp/>/<sp/>np.linalg.norm(v2)</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>=<sp/>np.zeros((3,<sp/>2))</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A[:,<sp/>0:1]<sp/>=<sp/>v1</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A[:,<sp/>1:2]<sp/>=<sp/>-1*R_C1_C0.dot(v2)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>p_C1_C0</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>residuals,<sp/>rank,<sp/>s<sp/>=<sp/>np.linalg.lstsq(a=A,<sp/>b=b)</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x[0]<sp/>*<sp/>v1</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">h(self,<sp/>x,<sp/>state):</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.zeros((int(2*x.shape[0]/3),<sp/>1))</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[0::2,<sp/>:]<sp/>=<sp/>state.f_x<sp/>*<sp/>x[0::3,<sp/>:]<sp/>/<sp/>x[2::3,<sp/>:]<sp/>+<sp/>state.o_x</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[1::2,<sp/>:]<sp/>=<sp/>state.f_y<sp/>*<sp/>x[1::3,<sp/>:]<sp/>/<sp/>x[2::3,<sp/>:]<sp/>+<sp/>state.o_y</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">g(self,<sp/>x,<sp/>state,<sp/>feature):</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha,<sp/>beta,<sp/>rho<sp/>=<sp/>x[0,<sp/>0],<sp/>x[1,<sp/>0],<sp/>x[2,<sp/>0]</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>feature.track_length()</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.zeros((3*n,<sp/>1))</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n):</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_Ci_C0<sp/>=<sp/>Quaternion.to_rotation_matrix(state.get_pose_to_pose_rotation(feature.first_image,<sp/>feature.first_image<sp/>+<sp/>i))</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_C0_Ci<sp/>=<sp/>state.get_position_of_pose_in_another_pose(target_pose_id=(feature.first_image),<sp/>reference_pose_id=feature.first_image<sp/>+<sp/>i)</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[(3*i):(3*(i+1)),<sp/>:]<sp/>=<sp/>R_Ci_C0.dot(np.asarray([alpha,<sp/>beta,<sp/>1.0]).reshape((3,<sp/>1)))<sp/>+<sp/>rho<sp/>*<sp/>p_C0_Ci</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">feature_residual(self,<sp/>x,<sp/>state,<sp/>feature):</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_true<sp/>=<sp/>np.asarray(feature.pixel_coordinates).flatten()[:,<sp/>np.newaxis]</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(z_true<sp/>-<sp/>self.<ref refid="classmsckf_1_1_msckf_1a091abe4b54b43f7d11e1ffe2063f7ac9" kindref="member">h</ref>(self.<ref refid="classmsckf_1_1_msckf_1aa923443e7b9f8c18963493b1a910025e" kindref="member">g</ref>(x.reshape((3,<sp/>1)),<sp/>state,<sp/>feature),<sp/>state)).flatten()</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">camera_jacobian(self,<sp/>p_f_C,<sp/>state):</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_lambda<sp/>=<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>self.<ref refid="classmsckf_1_1_msckf_1a091abe4b54b43f7d11e1ffe2063f7ac9" kindref="member">h</ref>(x[:,<sp/>np.newaxis],<sp/>state).flatten()</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>approx_jacobian(p_f_C.flatten(),<sp/>h_lambda,<sp/>epsilon=1e-6)</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">compute_global_feature_estimate(self,<sp/>state,<sp/>feature,<sp/>max_steps=100,<sp/>threshold=1e-12):</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_length<sp/>=<sp/>feature.track_length()</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>initial<sp/>guess,<sp/>this<sp/>might<sp/>be<sp/>better</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_C1_C0<sp/>=<sp/>Quaternion.to_rotation_matrix(state.get_pose_to_pose_rotation(feature.first_image,<sp/>feature.first_image<sp/>+<sp/>1))</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_C1_C0<sp/>=<sp/>state.get_position_of_pose_in_another_pose(target_pose_id=(feature.first_image<sp/>+<sp/>1),<sp/>reference_pose_id=feature.first_image)</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z0<sp/>=<sp/>np.asarray(feature.pixel_coordinates[0]).reshape((2,<sp/>1))</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z1<sp/>=<sp/>np.asarray(feature.pixel_coordinates[1]).reshape((2,<sp/>1))</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z0[0,<sp/>0]<sp/>=<sp/>(z0[0,<sp/>0]<sp/>-<sp/>state.o_x)<sp/>/<sp/>state.f_x</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z0[1,<sp/>0]<sp/>=<sp/>(z0[1,<sp/>0]<sp/>-<sp/>state.o_y)<sp/>/<sp/>state.f_y</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z1[0,<sp/>0]<sp/>=<sp/>(z1[0,<sp/>0]<sp/>-<sp/>state.o_x)<sp/>/<sp/>state.f_x</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z1[1,<sp/>0]<sp/>=<sp/>(z1[1,<sp/>0]<sp/>-<sp/>state.o_y)<sp/>/<sp/>state.f_y</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_f_init<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1a48162eab93295a3aa9827d02570ecdf3" kindref="member">triangulate</ref>(z0,<sp/>z1,<sp/>R_C1_C0,<sp/>p_C1_C0)</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>estimate<sp/>=<sp/>1.0/p_f_init[2,<sp/>0]<sp/>*<sp/>p_f_init</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(R_C1_C0)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(p_C1_C0)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(state.camera_poses[0].p_B_G)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(state.camera_poses[1].p_B_G)</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(state.get_position_of_pose_in_global_frame(feature.first_image))</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(state.get_position_of_pose_in_global_frame(feature.first_image<sp/>+<sp/>1))</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;p_f_init:<sp/>{}&apos;</highlight><highlight class="normal">.format(p_f_init))</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Solve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>estimate.flatten()</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Initial<sp/>reprojection<sp/>errors:<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(self.<ref refid="classmsckf_1_1_msckf_1a561f373b33a2c3b7e8b9d6e1e8c95328" kindref="member">feature_residual</ref>(x0,<sp/>state=state,<sp/>feature=feature))</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>scipy.optimize.least_squares(self.<ref refid="classmsckf_1_1_msckf_1a561f373b33a2c3b7e8b9d6e1e8c95328" kindref="member">feature_residual</ref>,<sp/>x0,<sp/>kwargs={</highlight><highlight class="stringliteral">&apos;state&apos;</highlight><highlight class="normal">:<sp/>state,<sp/></highlight><highlight class="stringliteral">&apos;feature&apos;</highlight><highlight class="normal">:<sp/>feature})</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>res.success:</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Unsuccessful&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(res)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_G_C0<sp/>=<sp/>Quaternion.to_rotation_matrix(state.get_rotation_from_global_to_camera_pose(feature.first_image).conjugate())</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_C0_G<sp/>=<sp/>state.get_position_of_pose_in_global_frame(feature.first_image)</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_f_G_est<sp/>=<sp/>1/res.x[2]<sp/>*<sp/>R_G_C0.dot(np.asarray([res.x[0],<sp/>res.x[1],<sp/>1.0]).reshape((3,<sp/>1)))<sp/>+<sp/>p_C0_G</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>residual<sp/>=<sp/>self.<ref refid="classmsckf_1_1_msckf_1a561f373b33a2c3b7e8b9d6e1e8c95328" kindref="member">feature_residual</ref>(res.x,<sp/>state=state,<sp/>feature=feature)</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Reprojection<sp/>errors:<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(residual)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>res.x[2]<sp/>&lt;<sp/>0:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception(&apos;Killing<sp/>feature&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_f_G_est</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>camera_derivatives<sp/>=<sp/>[None]<sp/>*<sp/>feature_length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>step<sp/>in<sp/>range(max_steps):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>jacobian<sp/>=<sp/>np.zeros((2*feature_length,<sp/>3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>errors<sp/>=<sp/>np.zeros((2*feature_length,<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(feature_length):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_this_rotation<sp/>=<sp/>Quaternion.to_rotation_matrix(state.get_pose_to_pose_rotation(feature.first_image,<sp/>feature.first_image<sp/>+<sp/>i))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_this_position<sp/>=<sp/>state.get_position_of_pose_in_another_pose(target_pose_id=(feature.first_image),<sp/>reference_pose_id=feature.first_image<sp/>+<sp/>i)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>estimate_in_frame<sp/>=<sp/>Quaternion.to_rotation_matrix(state.get_rotation_from_global_to_camera_pose(feature.first_image<sp/>+<sp/>i)).dot(estimate<sp/>-<sp/>state.get_position_of_pose_in_global_frame(feature.first_image<sp/>+<sp/>i))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>estimate_in_frame<sp/>=<sp/>to_this_rotation.dot(np.asarray([estimate[0,<sp/>0],<sp/>estimate[1,<sp/>0],<sp/>1.0]).reshape((3,<sp/>1)))<sp/>+<sp/>estimate[2,<sp/>0]*to_this_position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>if<sp/>i<sp/>==<sp/>0:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/>print(&apos;Jeste<sp/>vetsi<sp/>vole&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/>print(to_this_rotation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/>print(to_this_position)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/>print(estimate)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/>print(estimate_in_frame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/>print(&apos;konec&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera_derivative<sp/>=<sp/>self.calculate_camera_projection_estimate(state,<sp/>estimate_in_frame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera_derivatives[i]<sp/>=<sp/>camera_derivative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Calculate<sp/>projection<sp/>derivative<sp/>$\dfrac{\partial<sp/>g_i}{\partial<sp/>\theta}$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projection_derivative<sp/>=<sp/>np.zeros((3,<sp/>3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projection_derivative[:,<sp/>0:1]<sp/>=<sp/>to_this_rotation.dot(np.array([1.0,<sp/>0.0,<sp/>0.0]).reshape((3,<sp/>1)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projection_derivative[:,<sp/>1:2]<sp/>=<sp/>to_this_rotation.dot(np.array([0.0,<sp/>1.0,<sp/>0.0]).reshape((3,<sp/>1)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projection_derivative[:,<sp/>2:]<sp/>=<sp/>to_this_position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>print(&apos;vole<sp/>{}&apos;.format(i))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>print(self.pinhole_model(state,<sp/>estimate_in_frame))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>print(self.pinhole_model(state,<sp/>estimate))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>feature.get_pixel_coordinates_in_image(feature.first_image<sp/>+<sp/>i)<sp/>-<sp/>self.pinhole_model(state,<sp/>estimate_in_frame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower,<sp/>upper<sp/>=<sp/>2*i,<sp/>2*(i+1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jacobian[lower:upper,:]<sp/>=<sp/>camera_derivative.dot(projection_derivative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors[lower:upper,:]<sp/>=<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>#print(&apos;Iteration<sp/>{}&apos;.format(step))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>#print(errors)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>if<sp/>np.absolute(errors).max()<sp/>&lt;<sp/>threshold:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(&quot;Breaking<sp/>at<sp/>iteration<sp/>{}<sp/>with<sp/>errors:<sp/>{}&quot;.format(step,<sp/>np.absolute(errors).max()))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>inv(jacobian.T.dot(jacobian)).dot(jacobian.T).dot(errors)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>estimate<sp/>=<sp/>estimate<sp/>+<sp/>delta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&apos;Step:<sp/>{}/{}<sp/>({:.5f})&apos;.format(step,<sp/>max_steps,<sp/>np.absolute(errors).max()))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>TODO:<sp/>Remove</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>p_f_init<sp/>=<sp/>self.triangulate(z0,<sp/>z1,<sp/>R_C1_C0,<sp/>p_C1_C0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>estimate<sp/>=<sp/>1.0/p_f_init[2,<sp/>0]<sp/>*<sp/>p_f_init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>Compute<sp/>global<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>rotation_from_first_to_global<sp/>=<sp/>Quaternion.to_rotation_matrix(state.get_rotation_from_global_to_camera_pose(feature.first_image)).T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>position_of_first_in_global<sp/>=<sp/>state.get_position_of_pose_in_global_frame(feature.first_image)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>alpha,<sp/>beta,<sp/>rho<sp/>=<sp/>estimate[0,<sp/>0],<sp/>estimate[1,<sp/>0],<sp/>estimate[2,<sp/>0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>global_position<sp/>=<sp/>1.0/rho<sp/>*<sp/>rotation_from_first_to_global.dot(np.array([alpha,<sp/>beta,<sp/>1.0]).reshape((3,<sp/>1)))<sp/>+<sp/>position_of_first_in_global</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&apos;estimate:&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to_first_rotation<sp/>=<sp/>Quaternion.to_rotation_matrix(state.get_pose_to_pose_rotation(feature.first_image,<sp/>feature.first_image))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to_first_position<sp/>=<sp/>state.get_position_of_pose_in_another_pose(target_pose_id=(feature.first_image),<sp/>reference_pose_id=feature.first_image)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>estimate_in_first<sp/>=<sp/>to_first_rotation.dot(np.asarray([estimate[0,<sp/>0],<sp/>estimate[1,<sp/>0],<sp/>1.0]).reshape((3,<sp/>1)))<sp/>+<sp/>estimate[2,<sp/>0]*to_first_position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>actual<sp/>=<sp/>feature.get_pixel_coordinates_in_image(feature.first_image)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>estimated<sp/>=<sp/>self.pinhole_model(state,<sp/>estimate_in_first)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&apos;Actual:<sp/>[{:.0f},<sp/>{:.0f}]&apos;.format(actual[0,<sp/>0],<sp/>actual[1,<sp/>0]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&apos;Projected:<sp/>[{:.0f},<sp/>{:.0f}]&apos;.format(estimated[0,<sp/>0],<sp/>estimated[1,<sp/>0]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(rotation_from_first_to_global)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(position_of_first_in_global)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(estimate)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(global_position)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>return<sp/>global_position,<sp/>camera_derivatives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">calculate_camera_projection_estimate(self,<sp/>state,<sp/>estimate):</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>y,<sp/>z<sp/>=<sp/>estimate[0,<sp/>0],<sp/>estimate[1,<sp/>0],<sp/>estimate[2,<sp/>0]</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&apos;({:.2f},<sp/>{:.2f},<sp/>{:.2f})&apos;.format(x,<sp/>y,<sp/>z))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uv_by_xyz<sp/>=<sp/>np.asarray([y/(z*z),<sp/>x/(z*z),<sp/>-2*x*y/(z*z*z)]).reshape((1,<sp/>3))</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_by_xyz<sp/>=<sp/>np.asarray([1.0/z,<sp/>0.0,<sp/>-1*x/(z*z)]).reshape((1,<sp/>3))</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_by_xyz<sp/>=<sp/>np.asarray([0.0,<sp/>1.0/z,<sp/>-1*y/(z*z)]).reshape((1,<sp/>3))</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_by_xyz<sp/>=<sp/>np.asarray([2*x/(z*z),<sp/>2*y/(z*z),<sp/>-2.0/(z*z*z)*(x*x<sp/>+<sp/>y*y)]).reshape((1,<sp/>3))</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_squared_by_xyz<sp/>=<sp/>np.asarray([4.0*x*(x*x<sp/>+<sp/>y*y)/np.power(z,<sp/>4),<sp/>4.0*y*(x*x<sp/>+<sp/>y*y)/np.power(z,<sp/>4),<sp/>-4.0*np.power((x*x<sp/>+<sp/>y*y),<sp/>2)/np.power(z,<sp/>5)]).reshape((1,<sp/>3))</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_cubed_by_xyz<sp/>=<sp/>np.asarray([</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6.0*x*np.power(x*x<sp/>+<sp/>y*y,<sp/>2)/np.power(z,<sp/>6),</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6.0*y*np.power(x*x<sp/>+<sp/>y*y,<sp/>2)/np.power(z,<sp/>6),</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-6.0*np.power(x*x<sp/>+<sp/>y*y,<sp/>3)/np.power(z,<sp/>7)</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]).reshape((1,<sp/>3))</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u,<sp/>v<sp/>=<sp/>x/z,<sp/>y/z</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>u*u<sp/>+<sp/>v*v</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k1,<sp/>k2,<sp/>k3<sp/>=<sp/>state.k_1,<sp/>state.k_2,<sp/>state.k_3</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1,<sp/>t2<sp/>=<sp/>state.t_1,<sp/>state.t_2</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fx,<sp/>fy<sp/>=<sp/>state.f_x,<sp/>state.f_y</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_r_by_xyz<sp/>=<sp/>1<sp/>+<sp/>k1*r_by_xyz<sp/>+<sp/>k2*r_squared_by_xyz<sp/>+<sp/>k3*r_cubed_by_xyz</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_t_by_xyz<sp/>=<sp/>np.array([</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2*t1*uv_by_xyz<sp/>+<sp/>t2*r_by_xyz<sp/>+<sp/>4.0*t2*u*u_by_xyz,</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2*t2*uv_by_xyz<sp/>+<sp/>t1*r_by_xyz<sp/>+<sp/>4.0*t1*v*v_by_xyz</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]).reshape((2,<sp/>3))</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_r<sp/>=<sp/>1<sp/>+<sp/>k1*r<sp/>+<sp/>k2*np.power(r,<sp/>2)<sp/>+<sp/>k3*np.power(r,<sp/>3)</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#d_t<sp/>=<sp/>np.asarray([</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>[2.0*u*v*t1<sp/>+<sp/>(r<sp/>+<sp/>2.0*u*u)*t2],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>[2.0*u*v*t2<sp/>+<sp/>(r<sp/>+<sp/>2.0*v*v)*t1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#]).reshape((2,<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>np.asarray([</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[fx,<sp/>0],<sp/></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0,<sp/>fy]</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]).reshape((2,<sp/>2))</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partial_derivatives<sp/>=<sp/>np.asarray([</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[d_r/z<sp/>+<sp/>d_r_by_xyz[0,<sp/>0]*u<sp/>+<sp/>d_t_by_xyz[0,<sp/>0],<sp/>d_r_by_xyz[0,<sp/>1]*u<sp/>+<sp/>d_t_by_xyz[0,<sp/>1],<sp/>-1.0*d_r/z*u<sp/>+<sp/>d_r_by_xyz[0,<sp/>2]*u<sp/>+<sp/>d_t_by_xyz[0,<sp/>2]],</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[d_r_by_xyz[0,<sp/>0]*v<sp/>+<sp/>d_t_by_xyz[1,<sp/>0],<sp/>d_r/z<sp/>+<sp/>d_r_by_xyz[0,<sp/>1]*v<sp/>+<sp/>d_t_by_xyz[1,<sp/>1],<sp/>-1.0*d_r/z*v<sp/>+<sp/>d_r_by_xyz[0,<sp/>2]*v<sp/>+<sp/>d_t_by_xyz[1,<sp/>2]]</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]).reshape((2,<sp/>3))</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f.dot(partial_derivatives)</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">pinhole_model(self,<sp/>state,<sp/>point_3d):</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Point<sp/>is<sp/>$(X/Z,<sp/>Y/Z,<sp/>1/Z)$&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>y,<sp/>z<sp/>=<sp/>tuple(point_3d)</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u,<sp/>v<sp/>=<sp/>x/z,<sp/>y/z</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>u*u<sp/>+<sp/>v*v</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ox,<sp/>oy<sp/>=<sp/>state.o_x,<sp/>state.o_y</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fx,<sp/>fy<sp/>=<sp/>state.f_x,<sp/>state.f_y</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k1,<sp/>k2,<sp/>k3<sp/>=<sp/>state.k_1,<sp/>state.k_2,<sp/>state.k_3</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1,<sp/>t2<sp/>=<sp/>state.t_1,<sp/>state.t_2</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>=<sp/>np.asarray([ox,<sp/>oy]).reshape((2,<sp/>1))</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>np.asarray([</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[fx,<sp/>0],</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0,<sp/>fy]</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_r<sp/>=<sp/>1<sp/>+<sp/>k1*r<sp/>+<sp/>k2*np.power(r,<sp/>2)<sp/>+<sp/>k3*np.power(r,<sp/>3)</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_t<sp/>=<sp/>np.asarray([</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.0*u*v*t1<sp/>+<sp/>(r<sp/>+<sp/>2.0*u*u)*t2,</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.0*u*v*t2<sp/>+<sp/>(r<sp/>+<sp/>2.0*u*v)*t1</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o<sp/>+<sp/>f.dot(d_r<sp/>*<sp/>np.asarray([u,<sp/>v]).reshape(2,<sp/>1)<sp/>+<sp/>d_t)</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">interpolate(self,<sp/>earlier,<sp/>later,<sp/>to_time):</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>earlier_time<sp/>=<sp/>earlier[0]</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>later_time<sp/>=<sp/>later[0]</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>earlier_time<sp/>&lt;=<sp/>to_time,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>extrapolate<sp/>IMU<sp/>data<sp/>into<sp/>the<sp/>past&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>to_time<sp/>&lt;=<sp/>later_time,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>extrapolate<sp/>IMU<sp/>data<sp/>into<sp/>the<sp/>future&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>(to_time<sp/>-<sp/>earlier_time)<sp/>/<sp/>(later_time<sp/>-<sp/>earlier_time)</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpolated<sp/>=<sp/>t*earlier[1]<sp/>+<sp/>(1-t)*later[1]</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(to_time,<sp/>interpolated)</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">publish_localization(self):</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position<sp/>=<sp/>self.state.p_B_G</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attitude<sp/>=<sp/>self.state.q_B_G</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>TransformStamped()</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.header.stamp<sp/>=<sp/>rospy.Time.from_sec(self.state.time)</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;world&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.child_frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;msckf&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.transform.translation.x<sp/>=<sp/>position[0,<sp/>0]</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.transform.translation.y<sp/>=<sp/>position[1,<sp/>0]</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.transform.translation.z<sp/>=<sp/>position[2,<sp/>0]</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.transform.rotation.x<sp/>=<sp/>attitude.x</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.transform.rotation.y<sp/>=<sp/>attitude.y</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.transform.rotation.z<sp/>=<sp/>attitude.z</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.transform.rotation.w<sp/>=<sp/>attitude.w</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.br.sendTransform(t)</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">publish_image_if_new_available(self):</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image<sp/>=<sp/>self.image_tracker.image_to_publish()</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>image<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>self.bridge.cv2_to_imgmsg(image,<sp/></highlight><highlight class="stringliteral">&quot;bgr8&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.image_publisher.publish(msg)</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">run(self):</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.init_node(</highlight><highlight class="stringliteral">&apos;msckf&apos;</highlight><highlight class="normal">,<sp/>anonymous=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Reset<sp/>Gazebo<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_model_state<sp/>=<sp/>rospy.ServiceProxy(</highlight><highlight class="stringliteral">&apos;/gazebo/set_model_state&apos;</highlight><highlight class="normal">,<sp/>SetModelState)</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_state<sp/>=<sp/>ModelState()</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_state.model_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;filterbot&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_state.pose.position.x<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_state.pose.position.y<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_state.pose.position.z<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_state.pose.orientation.x<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_state.pose.orientation.y<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_state.pose.orientation.z<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_state.pose.orientation.w<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_model_state(model_state)</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.imu_subscriber<sp/>=<sp/>rospy.Subscriber(&quot;/iosmsg/imu_data&quot;,<sp/>Imu,<sp/>self.callback_imu)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1aa293c70761d866bcdf8e984a1385de64" kindref="member">imu_subscriber</ref><sp/>=<sp/>rospy.Subscriber(</highlight><highlight class="stringliteral">&quot;/filterbot/imu_data&quot;</highlight><highlight class="normal">,<sp/>Imu,<sp/>self.<ref refid="classmsckf_1_1_msckf_1ab718a75ae92fe78165b104903589996b" kindref="member">callback_imu</ref>)</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.camera_subscriber<sp/>=<sp/>rospy.Subscriber(&quot;/image_topic_2&quot;,<sp/>Image,<sp/>self.callback_camera)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a354aa0dd7846a4787802bf3bb7791173" kindref="member">camera_subscriber</ref><sp/>=<sp/>rospy.Subscriber(</highlight><highlight class="stringliteral">&quot;/filterbot/camera/image_raw&quot;</highlight><highlight class="normal">,<sp/>Image,<sp/>self.<ref refid="classmsckf_1_1_msckf_1a1489f7f6eb9ac6b0478a186fcd05650f" kindref="member">callback_camera</ref>)</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1aa175e86a112bcc920bd6b8cf54083e86" kindref="member">br</ref><sp/>=<sp/>tf2_ros.TransformBroadcaster()</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a8456c22259389af1d92a3926e7b7020e" kindref="member">image_publisher</ref><sp/>=<sp/>rospy.Publisher(</highlight><highlight class="stringliteral">&quot;/msckf/image&quot;</highlight><highlight class="normal">,<sp/>Image,<sp/>queue_size=10)</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a105ff6012b0df8b799c2be6ab9c76add" kindref="member">pointcloud_publisher</ref><sp/>=<sp/>rospy.Publisher(</highlight><highlight class="stringliteral">&apos;/msckf/pointcloud&apos;</highlight><highlight class="normal">,<sp/>PointCloud,<sp/>queue_size=10)</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1af1c0cd63952b6bd0ae751c39c4e6422a" kindref="member">tfBuffer</ref><sp/>=<sp/>tf2_ros.Buffer()</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmsckf_1_1_msckf_1a65e9d1ff1559e16bd18e01212b428252" kindref="member">listener</ref><sp/>=<sp/>tf2_ros.TransformListener(self.<ref refid="classmsckf_1_1_msckf_1af1c0cd63952b6bd0ae751c39c4e6422a" kindref="member">tfBuffer</ref>)</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.spin()</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">main():</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>msckf<sp/>=<sp/><ref refid="classmsckf_1_1_msckf" kindref="compound">Msckf</ref>()</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>msckf.run()</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>main()</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/tomas789/tonav/prototype/msckf.py"/>
  </compounddef>
</doxygen>
