<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="navigator_8cpp" kind="file">
    <compoundname>navigator.cpp</compoundname>
    <includes refid="navigator_8h" local="yes">navigator.h</includes>
    <includes local="no">boost/filesystem.hpp</includes>
    <includes local="no">boost/program_options.hpp</includes>
    <includes local="no">iostream</includes>
    <includes local="no">opencv2/core/core.hpp</includes>
    <includes local="no">opencv2/highgui/highgui.hpp</includes>
    <includes local="no">ros/ros.h</includes>
    <includes refid="image__transport_8h" local="no">image_transport/image_transport.h</includes>
    <includes local="no">cv_bridge/cv_bridge.h</includes>
    <includes local="no">tf2/LinearMath/Quaternion.h</includes>
    <includes local="no">tf2_ros/transform_broadcaster.h</includes>
    <includes local="no">geometry_msgs/TransformStamped.h</includes>
    <includes refid="calibration_8h" local="yes">calibration.h</includes>
    <includes refid="camera__feed_8h" local="yes">camera_feed.h</includes>
    <includes refid="base__exception_8h" local="yes">exceptions/base_exception.h</includes>
    <includes refid="impossible__exception_8h" local="yes">exceptions/impossible_exception.h</includes>
    <includes refid="filter_8h" local="yes">filter.h</includes>
    <includes refid="imu__buffer_8h" local="yes">imu_buffer.h</includes>
    <includes refid="imu__feed_8h" local="yes">imu_feed.h</includes>
    <incdepgraph>
      <node id="688">
        <label>image_transport/loader_fwds.h</label>
        <link refid="loader__fwds_8h_source"/>
      </node>
      <node id="727">
        <label>imu_feed.h</label>
        <link refid="imu__feed_8h_source"/>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="701" relation="include">
        </childnode>
        <childnode refid="702" relation="include">
        </childnode>
        <childnode refid="726" relation="include">
        </childnode>
      </node>
      <node id="714">
        <label>limits</label>
      </node>
      <node id="692">
        <label>sensor_msgs/CameraInfo.h</label>
      </node>
      <node id="691">
        <label>image_transport/camera_publisher.h</label>
        <link refid="camera__publisher_8h_source"/>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="692" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
      </node>
      <node id="712">
        <label>Eigen/Geometry</label>
      </node>
      <node id="683">
        <label>image_transport/single_subscriber_publisher.h</label>
        <link refid="single__subscriber__publisher_8h_source"/>
        <childnode refid="684" relation="include">
        </childnode>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
      </node>
      <node id="687">
        <label>stdexcept</label>
      </node>
      <node id="700">
        <label>Eigen/Core</label>
      </node>
      <node id="677">
        <label>opencv2/core/core.hpp</label>
      </node>
      <node id="723">
        <label>feature_track.h</label>
        <link refid="feature__track_8h_source"/>
        <childnode refid="709" relation="include">
        </childnode>
        <childnode refid="702" relation="include">
        </childnode>
      </node>
      <node id="682">
        <label>sensor_msgs/Image.h</label>
      </node>
      <node id="701">
        <label>string</label>
      </node>
      <node id="684">
        <label>boost/noncopyable.hpp</label>
      </node>
      <node id="708">
        <label>filter.h</label>
        <link refid="filter_8h_source"/>
        <childnode refid="709" relation="include">
        </childnode>
        <childnode refid="698" relation="include">
        </childnode>
        <childnode refid="710" relation="include">
        </childnode>
        <childnode refid="719" relation="include">
        </childnode>
        <childnode refid="724" relation="include">
        </childnode>
      </node>
      <node id="725">
        <label>imu_device.h</label>
        <link refid="imu__device_8h_source"/>
        <childnode refid="676" relation="include">
        </childnode>
      </node>
      <node id="710">
        <label>filter_state.h</label>
        <link refid="filter__state_8h_source"/>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="709" relation="include">
        </childnode>
        <childnode refid="702" relation="include">
        </childnode>
        <childnode refid="711" relation="include">
        </childnode>
        <childnode refid="713" relation="include">
        </childnode>
        <childnode refid="716" relation="include">
        </childnode>
      </node>
      <node id="694">
        <label>cv_bridge/cv_bridge.h</label>
      </node>
      <node id="690">
        <label>image_transport/transport_hints.h</label>
        <link refid="transport__hints_8h_source"/>
        <childnode refid="679" relation="include">
        </childnode>
      </node>
      <node id="711">
        <label>body_state.h</label>
        <link refid="body__state_8h_source"/>
        <childnode refid="700" relation="include">
        </childnode>
        <childnode refid="712" relation="include">
        </childnode>
      </node>
      <node id="706">
        <label>exception</label>
      </node>
      <node id="674">
        <label>boost/program_options.hpp</label>
      </node>
      <node id="680">
        <label>image_transport/image_transport.h</label>
        <link refid="image__transport_8h_source"/>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
        <childnode refid="693" relation="include">
        </childnode>
      </node>
      <node id="721">
        <label>opencv2/features2d/features2d.hpp</label>
      </node>
      <node id="686">
        <label>image_transport/exception.h</label>
        <link refid="exception_8h_source"/>
        <childnode refid="687" relation="include">
        </childnode>
      </node>
      <node id="717">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="693">
        <label>image_transport/camera_subscriber.h</label>
        <link refid="camera__subscriber_8h_source"/>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="692" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="690" relation="include">
        </childnode>
      </node>
      <node id="685">
        <label>boost/function.hpp</label>
      </node>
      <node id="709">
        <label>Eigen/Dense</label>
      </node>
      <node id="689">
        <label>image_transport/subscriber.h</label>
        <link refid="subscriber_8h_source"/>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="690" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
        <childnode refid="688" relation="include">
        </childnode>
      </node>
      <node id="697">
        <label>geometry_msgs/TransformStamped.h</label>
      </node>
      <node id="699">
        <label>boost/filesystem/path.hpp</label>
      </node>
      <node id="673">
        <label>navigator.h</label>
        <link refid="navigator_8h_source"/>
        <childnode refid="674" relation="include">
        </childnode>
      </node>
      <node id="726">
        <label>imu_item.h</label>
        <link refid="imu__item_8h_source"/>
        <childnode refid="701" relation="include">
        </childnode>
        <childnode refid="700" relation="include">
        </childnode>
        <childnode refid="725" relation="include">
        </childnode>
      </node>
      <node id="719">
        <label>feature_tracker.h</label>
        <link refid="feature__tracker_8h_source"/>
        <childnode refid="720" relation="include">
        </childnode>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="721" relation="include">
        </childnode>
        <childnode refid="722" relation="include">
        </childnode>
        <childnode refid="723" relation="include">
        </childnode>
      </node>
      <node id="722">
        <label>frame_features.h</label>
        <link refid="frame__features_8h_source"/>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="721" relation="include">
        </childnode>
      </node>
      <node id="705">
        <label>exceptions/base_exception.h</label>
        <link refid="base__exception_8h_source"/>
        <childnode refid="706" relation="include">
        </childnode>
      </node>
      <node id="702">
        <label>vector</label>
      </node>
      <node id="704">
        <label>camera_item.h</label>
        <link refid="camera__item_8h_source"/>
        <childnode refid="701" relation="include">
        </childnode>
      </node>
      <node id="724">
        <label>imu_buffer.h</label>
        <link refid="imu__buffer_8h_source"/>
        <childnode refid="702" relation="include">
        </childnode>
        <childnode refid="725" relation="include">
        </childnode>
        <childnode refid="726" relation="include">
        </childnode>
      </node>
      <node id="675">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="707">
        <label>exceptions/impossible_exception.h</label>
        <link refid="impossible__exception_8h_source"/>
        <childnode refid="701" relation="include">
        </childnode>
        <childnode refid="705" relation="include">
        </childnode>
      </node>
      <node id="672">
        <label>/home/travis/build/tomas789/tonav/src/navigator.cpp</label>
        <link refid="navigator.cpp"/>
        <childnode refid="673" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="694" relation="include">
        </childnode>
        <childnode refid="695" relation="include">
        </childnode>
        <childnode refid="696" relation="include">
        </childnode>
        <childnode refid="697" relation="include">
        </childnode>
        <childnode refid="698" relation="include">
        </childnode>
        <childnode refid="703" relation="include">
        </childnode>
        <childnode refid="705" relation="include">
        </childnode>
        <childnode refid="707" relation="include">
        </childnode>
        <childnode refid="708" relation="include">
        </childnode>
        <childnode refid="724" relation="include">
        </childnode>
        <childnode refid="727" relation="include">
        </childnode>
      </node>
      <node id="718">
        <label>utility</label>
      </node>
      <node id="679">
        <label>ros/ros.h</label>
      </node>
      <node id="678">
        <label>opencv2/highgui/highgui.hpp</label>
      </node>
      <node id="676">
        <label>iostream</label>
      </node>
      <node id="716">
        <label>camera_pose_buffer.h</label>
        <link refid="camera__pose__buffer_8h_source"/>
        <childnode refid="717" relation="include">
        </childnode>
        <childnode refid="718" relation="include">
        </childnode>
        <childnode refid="713" relation="include">
        </childnode>
      </node>
      <node id="681">
        <label>image_transport/publisher.h</label>
        <link refid="publisher_8h_source"/>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
        <childnode refid="688" relation="include">
        </childnode>
      </node>
      <node id="695">
        <label>tf2/LinearMath/Quaternion.h</label>
      </node>
      <node id="696">
        <label>tf2_ros/transform_broadcaster.h</label>
      </node>
      <node id="715">
        <label>set</label>
      </node>
      <node id="698">
        <label>calibration.h</label>
        <link refid="calibration_8h_source"/>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="700" relation="include">
        </childnode>
        <childnode refid="701" relation="include">
        </childnode>
        <childnode refid="702" relation="include">
        </childnode>
      </node>
      <node id="703">
        <label>camera_feed.h</label>
        <link refid="camera__feed_8h_source"/>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="701" relation="include">
        </childnode>
        <childnode refid="702" relation="include">
        </childnode>
        <childnode refid="704" relation="include">
        </childnode>
      </node>
      <node id="713">
        <label>camera_pose.h</label>
        <link refid="camera__pose_8h_source"/>
        <childnode refid="709" relation="include">
        </childnode>
        <childnode refid="714" relation="include">
        </childnode>
        <childnode refid="715" relation="include">
        </childnode>
      </node>
      <node id="720">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Tomas<sp/>Krejci<sp/>on<sp/>5/11/16.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;navigator.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/program_options.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/core/core.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/highgui/highgui.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/ros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;image_transport/image_transport.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cv_bridge/cv_bridge.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf2/LinearMath/Quaternion.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf2_ros/transform_broadcaster.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs/TransformStamped.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;calibration.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;camera_feed.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;exceptions/base_exception.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;exceptions/impossible_exception.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;filter.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imu_buffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imu_feed.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_navigator_1a614e53f6cf6859608b14057272003cea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_navigator_1a614e53f6cf6859608b14057272003cea" kindref="member">Navigator::run</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fs<sp/>=<sp/>boost::filesystem;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>parseOptions(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vmap_.count(</highlight><highlight class="stringliteral">&quot;help&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printHelp(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::path<sp/>dataset_path(vmap_[</highlight><highlight class="stringliteral">&quot;dataset&quot;</highlight><highlight class="normal">].as&lt;std::string&gt;());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::path<sp/>calibration_path(vmap_[</highlight><highlight class="stringliteral">&quot;calib&quot;</highlight><highlight class="normal">].as&lt;std::string&gt;());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fs::exists(dataset_path))<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Dataset<sp/>path<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dataset_path.string()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>does<sp/>not<sp/>exists.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printHelp(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibration" kindref="compound">Calibration</ref><sp/>calibration<sp/>=<sp/>Calibration::fromPath(calibration_path);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_filter" kindref="compound">Filter</ref><sp/>filter(calibration);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter.initialize();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_imu_feed" kindref="compound">ImuFeed</ref><sp/>imu_feed<sp/>=<sp/>ImuFeed::fromDataset(dataset_path);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_camera_feed" kindref="compound">CameraFeed</ref><sp/>camera_feed<sp/>=<sp/>CameraFeed::fromDataset(dataset_path);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_feature_tracker" kindref="compound">FeatureTracker</ref><sp/>feature_tracker;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::init(argc,<sp/>const_cast&lt;char**&gt;(argv),<sp/></highlight><highlight class="stringliteral">&quot;image_publisher&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>nh;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__transport_1_1_image_transport" kindref="compound">image_transport::ImageTransport</ref><sp/>it(nh);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__transport_1_1_publisher" kindref="compound">image_transport::Publisher</ref><sp/>pub<sp/>=<sp/>it.<ref refid="classimage__transport_1_1_image_transport_1aba83e00cf60977d58ac17c2915f2562b" kindref="member">advertise</ref>(</highlight><highlight class="stringliteral">&quot;camera/image&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf2_ros::TransformBroadcaster<sp/>br;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>buff_size<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_imu_buffer" kindref="compound">ImuBuffer</ref><sp/>accel_buff(ImuDevice::ACCELEROMETER,<sp/>buff_size);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_imu_buffer" kindref="compound">ImuBuffer</ref><sp/>gyro_buff(ImuDevice::GYROSCOPE,<sp/>buff_size);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>last_imu_update_time<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(camera_feed.hasNext()<sp/>&amp;&amp;<sp/>imu_feed.hasNext())<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imu_feed.top().getTime()<sp/>&lt;=<sp/>camera_feed.top().getTime())<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Propagate<sp/>IMU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_imu_item" kindref="compound">ImuItem</ref>&amp;<sp/>imu_item<sp/>=<sp/>imu_feed.top();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imu_feed.next();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout.precision(5);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Propagete<sp/>IMU<sp/>at<sp/>time<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>imu_item.getTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(imu_item.getDevice())<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImuDevice::ACCELEROMETER:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accel_buff.addMeasurement(imu_item);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImuDevice::GYROSCOPE:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyro_buff.addMeasurement(imu_item);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_impossible_exception" kindref="compound">ImpossibleException</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>IMU<sp/>device.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!accel_buff.isReady()<sp/>||<sp/>!gyro_buff.isReady())<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_imu_update_time<sp/>=<sp/>imu_item.getTime();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>accel_can_update<sp/>=<sp/>accel_buff.getMaxTime()<sp/>&gt;<sp/>last_imu_update_time;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gyro_can_update<sp/>=<sp/>gyro_buff.getMaxTime()<sp/>&gt;<sp/>last_imu_update_time;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accel_can_update<sp/>&amp;&amp;<sp/>gyro_can_update)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>update_time<sp/>=<sp/>std::min(accel_buff.getMaxTime(),<sp/>gyro_buff.getMaxTime());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_imu_item" kindref="compound">ImuItem</ref><sp/>accel_data<sp/>=<sp/>accel_buff.interpolateAtTime(update_time);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_imu_item" kindref="compound">ImuItem</ref><sp/>gyro_data<sp/>=<sp/>gyro_buff.interpolateAtTime(update_time);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter.stepInertial(update_time-last_imu_update_time,<sp/>accel_data,<sp/>gyro_data);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_imu_update_time<sp/>=<sp/>update_time;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Propagate<sp/>camera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_camera_item" kindref="compound">CameraItem</ref>&amp;<sp/>camera_item<sp/>=<sp/>camera_feed.top();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera_feed.next();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout.precision(5);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Propagate<sp/>CAM<sp/>at<sp/>time<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>camera_item.getTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>img<sp/>=<sp/>camera_feed.getImage(camera_item);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter.stepCamera(camera_item.getTime(),<sp/>img);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_msgs::ImagePtr<sp/>msg<sp/>=<sp/>cv_bridge::CvImage(std_msgs::Header(),<sp/></highlight><highlight class="stringliteral">&quot;bgr8&quot;</highlight><highlight class="normal">,<sp/>img).toImageMsg();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pub.<ref refid="classimage__transport_1_1_publisher_1adca2507fe8999ccfdfc6d8871f986e10" kindref="member">publish</ref>(msg);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::TransformStamped<sp/>transform;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Quaterniond<sp/>attitude<sp/>=<sp/>filter.getCurrentAttitude();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>position<sp/>=<sp/>filter.getCurrentPosition();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;world&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform.child_frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;filter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform.transform.translation.x<sp/>=<sp/>position(0,<sp/>0)<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform.transform.translation.y<sp/>=<sp/>position(1,<sp/>0)<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform.transform.translation.z<sp/>=<sp/>position(2,<sp/>0)<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform.transform.rotation.x<sp/>=<sp/>attitude.x();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform.transform.rotation.y<sp/>=<sp/>attitude.y();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform.transform.rotation.z<sp/>=<sp/>attitude.z();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform.transform.rotation.w<sp/>=<sp/>attitude.w();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.sendTransform(transform);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_base_exception" kindref="compound">BaseException</ref>&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EXCEPTION:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(e).name()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Navigator::parseOptions(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">po<sp/>=<sp/>boost::program_options;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>options_description_.add_options()</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;help,h&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;produce<sp/>help<sp/>message&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;calib&quot;</highlight><highlight class="normal">,<sp/>po::value&lt;std::string&gt;()-&gt;default_value(</highlight><highlight class="stringliteral">&quot;calibration.yaml&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;calibration<sp/>file&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;dataset&quot;</highlight><highlight class="normal">,<sp/>po::value&lt;std::string&gt;()-&gt;default_value(</highlight><highlight class="stringliteral">&quot;dataset&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;path<sp/>to<sp/>dataset&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>po::positional_options_description<sp/>positionalOptions;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>positionalOptions.add(</highlight><highlight class="stringliteral">&quot;dataset&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>po::store(po::command_line_parser(argc,<sp/>argv).options(options_description_).positional(positionalOptions).<ref refid="class_navigator_1a614e53f6cf6859608b14057272003cea" kindref="member">run</ref>(),<sp/>vmap_);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>po::notify(vmap_);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Navigator::printHelp(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>to_stderr)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/>out<sp/>=<sp/>to_stderr<sp/>?<sp/>std::cerr<sp/>:<sp/>std::cout;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>options_description_<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/tomas789/tonav/src/navigator.cpp"/>
  </compounddef>
</doxygen>
